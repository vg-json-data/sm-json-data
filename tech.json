{
  "$schema": "./schema/m3-tech.schema.json",
  "techCategories": [
    {
      "name": "General",
      "description": "General configuration techs",
      "techs": [
        {
          "name": "canBePatient",
          "requires": [],
          "note": "Executing a strat that requires waiting or doing the same thing over and over again for over 3 minutes, even with good execution"
        },
        {
          "name": "canPrepareForNextRoom",
          "requires": [],
          "note": [
            "The ability to know which room is coming next and use that information to enter the room in a specific way.",
            "This could be achieved from remembering which rooms Samus has been to, using the map to figure out which room is coming next, etc."
          ]
        },
        {
          "name": "canSuitlessLavaDive",
          "requires": [],
          "note": "Navigating deep lava without Gravity. This isn't limited to the Lava Dive Room, but it does exclude all rooms with just shallow lava."
        },
        {
          "name": "canHeatRun",
          "requires": [],
          "note": "Navigating heat rooms without immunity to heat damage."
        },
        {
          "name": "canSuitlessMaridia",
          "requires": [],
          "note": [
            "Navigating Maridia without Gravity.",
            "This is not required for simple underwater platforming where missing a jump does not leave the player stuck somewhere, or for falling down a submerged room."
          ],
          "extensionTechs": [
            {
              "name": "canSunkenTileWideWallClimb",
              "requires": [
                "canSuitlessMaridia",
                "canConsecutiveWalljump"
              ],
              "note": [
                "Using two walls spaced 1 tile apart to climb upward underwater.",
                "Samus will not be able to move away from the wall while wall jumping and so will be able to continuously gain height with fast jump presses."
              ]
            },
            {
              "name": "canCrossRoomJumpIntoWater",
              "requires": [ "canSuitlessMaridia" ],
              "note": "Using the momentum from jumping through a doorway from normal to water physics."
            }
          ]
        },
        {
          "name": "canPixelPreciseTrick",
          "requires": [],
          "note": "The ability to position Samus on a particular pixel position before executing a strat."
        }
      ]
    },
    {
      "name": "Movement",
      "description": "General movement tech, excluding jumps that have their own category",
      "techs": [
        {
          "name": "canDownGrab",
          "requires": [],
          "note":"The ability to aim down to reduce Samus' hitbox to reach higher ledges. Commonly paired with a Crouch Jump."
        },
        {
          "name": "canMoonwalk",
          "requires": [],
          "note": "This is an option that can be turned on in the special setting mode after selecting a save file. It is required for some tech.",
          "extensionTechs": [
            {
              "name": "canMoonfall",
              "requires": [ "canMoonwalk" ],
              "note": "Jumping off a ledge while moonwalking to fall with an uncapped speed."
            }
          ]
        },
        {
          "name": "canResetFallSpeed",
          "requires": [ "Morph" ],
          "note": "Using unmorph as a way to reset fall speed.",
          "devNote": "Taking enemy damage can get the same effect but more situations where this is used would need to be found first."
        },
        {
          "name": "canLateralMidAirMorph",
          "requires": [ "Morph" ],
          "note": "Performing the same input as a mockball, but in midair, in order to maintain forward momentum while morphing in midair",
          "extensionTechs": [
            {
              "name": "canSpringBallBounce",
              "requires": [
                "canLateralMidAirMorph",
                "SpringBall"
              ],
              "note": "Using a lateral mid-air morph to bounce off a surface with SpringBall while retaining previous momentum."
            },
            {
              "name": "canStationaryLateralMidAirMorph",
              "requires": [ "canLateralMidAirMorph" ],
              "note": [
                "While performing a stationary vertical jump, it's possible to mid-air morph in a manner similar to a lateral mid-air morph.",
                "Doing this immediately gives lateral momentum equivalent to maximum walk speed.",
                "This is meaningless under normal physics, but has underwater applications."
              ]
            }
          ]
        },
        {
          "name": "canMockball",
          "requires": [ "Morph" ],
          "note": [
            "Maintaining running speed while morphed, by holding jump and down (to crouch) during a lateral jump, then morphing as Samus hits the ground while holding jump and transition from holding down to holding forward.",
            "Sometimes referred to as a Machball."
          ]
        },
        {
          "name": "canBounceBall",
          "requires": [ "Morph" ],
          "note": "Using Morph to retain momentum when transitioning to water physics."
        },
        {
          "name": "canTwoTileSqueeze",
          "requires": [],
          "note": [
            "Taking advantage of the smaller hitbox of spinjump and down-aim to squeeze through two-tile gaps.",
            "Aiming down while jumping into a two-tile gap will allow Samus to stand up."
          ],
          "extensionTechs": [
            {
              "name": "canCrouchGateClip",
              "requires": [ "canTwoTileSqueeze" ],
              "note": "Using a spinjump and down-aim to clip into a closing gate, allowing Samus to walk through the gate."
            },
            {
              "name": "canTunnelCrawl",
              "requires": [ "canTwoTileSqueeze" ],
              "note": [
                "Moving along a 2-tile-high passage while standing up by repeatedly spin-jumping and then pressing down.",
                "The tech comes with softlock risks without Morph Ball or a way wiggle to the right with canTurnaroundAimCancel."
              ]
            }
          ]
        },
        {
          "name": "canMetroidAvoid",
          "requires": [],
          "note": "Being proficient at avoiding Metroids"
        },
        {
          "name": "canQuickCrumbleEscape",
          "requires": [],
          "note":"The combination of a crumble quick drop, and landing on a lower surface and jumping back over the crumble block before it re-forms."
        },
        {
          "name": "can3HighMidAirMorph",
          "requires": [ "Morph" ],
          "note" : "A mid-air morph that has to be done within an elevation difference of 3 tiles (with a ceiling removing any extra room). It's a lot more precise than with more room."
        },
        {
          "name": "canRJump",
          "requires": ["Morph"],
          "note": [
            "A technique for mid-air morphing over a two tile wall in air physics, or a one tile wall in water physics.",
            "This is most easily performed by:",
            "1) Hold angle aim(up or down) and down while in a crouching position.",
            "2) Pause and jump as late as possible.",
            "3) Release all inputs during the pause screen.",
            "4) Hold jump and down and forward after the pause screen clears but before game control resumes."
          ]
        },
        {
          "name": "canBabyMetroidAvoid",
          "requires": [],
          "note": "Being proficient at avoiding the baby Metroid"
        },
        {
          "name": "canMidairWiggle",
          "requires": [],
          "note": [
            "Turning around quickly so as to manipulate game physics.",
            "For using screw attack to break blocks and to shrink Samus hitbox following a wall jump",
            "And for maneuvering sharply underwater."
          ]
        }
      ]
    },
    {
      "name": "Jumps",
      "description": "Techs related to jumping. Excludes bomb jumping.",
      "techs": [
        {
          "name": "canCrouchJump",
          "requires": [],
          "note":"The ability to crouch before jumping to reach higher ledges. Commonly paired with a Down Grab."
        },
        {
          "name": "canGravityJump",
          "requires": [ "Gravity" ],
          "note": [
            "Turning off Gravity Suit right after the start of an underwater jump to achieve higher height.",
            "Can be performed in water, lava, or acid."
          ]
        },
        {
          "name": "canIframeSpikeJump",
          "requires": [ "canCarefulJump" ],
          "note": "Utilizing spikes i-frames to run and jump on spike floors or enemy i-frames to setup a jump from a spike wall."
        },
        {
          "name": "canStationarySpinJump",
          "requires": [],
          "note": [
            "Quickly press and release forward and then immediately press jump (after stopping) to spin jump with no horizontal movement.",
            "Holding run produces a spin jump with very low horizontal speed."
          ]
        },
        {
          "name": "canSpringBallJumpMidAir",
          "requires": [
            "Morph",
            "SpringBall"
          ],
          "note": [
            "Reaching a higher than normal height with a jump, by morphing in mid-air and then turning on SpringBall while still climbing upwards.",
            "This makes it possible to use SpringBall while Samus is still climbing upwards, for an additional jump."
          ],
          "extensionTechs": [
            {
              "name": "canSpringwall",
              "requires": [
                "canSpringBallJumpMidAir",
                "canWalljump"
              ],
              "note": [
                "A springball jump that starts with a wall jump to gain more height.",
                "It often relies on the momentum change when equipping or unequipping SpringBall while morphed and moving horizontally."
              ]
            },
            {
              "name": "canDoubleSpringBallJumpMidAir",
              "requires": [
                "Morph",
                "SpringBall"
              ],
              "note": [
                "Using the SpringBallJumpMidAir twice during a single jump to gain even more height. This typically only works underwater with HiJump.",
                "This consists of a tight variant of SpringBallJumpMidAir, then turning off spring ball, then a second SpringBallJumpMidAir all while still climbing upwards."
              ]
            }
          ]
        },
        {
          "name": "canCrumbleJump",
          "requires": [],
          "note": "The ability to reliably jump while landing on a crumble block. This may employ the small amount of jump buffering the game offers.",
          "extensionTechs": [
            {
              "name": "canCrumbleSpinJump",
              "requires": [ "canCrumbleJump" ],
              "note": "The ability to reliably spin jump while landing on a crumble block. This is much tighter than regular crumble jumps because the jump buffering does not help."
            }
          ]
        },
        {
          "name": "canGrappleJump",
          "requires": [
            "Grapple",
            "Morph",
            {"or": [
              "HiJump",
              "can3HighMidAirMorph"
            ]}
          ],
          "note": [
            "Using grapple to propel yourself upwards, then continuously morphing/unmorphing/jumping in midair to climb upwards",
            "Much more lenient with HiJump."
          ],
          "extensionTechs": [
            {
              "name": "canDraygonTurretGrappleJump",
              "requires": [
                "canGrappleJump",
                {"draygonElectricityFrames": 60}
              ],
              "note": "Using grapple jump off a Draygon turret.  Usually done by bouncing off the wall for momentum."
            }
          ]
        },
        {
          "name": "canCarefulJump",
          "requires": [],
          "note": "Executing a jump that requires somewhat precise or unintuitive movement.",
          "extensionTechs": [
            {
              "name": "canTrickyJump",
              "requires": [ "canCarefulJump" ],
              "note": "Executing a jump that requires very precise timing.",
              "extensionTechs": [
                {
                  "name": "canTrickyDashJump",
                  "requires": [
                    "canTrickyJump",
                    "SpeedBooster"
                  ],
                  "note": "Jumping during a spike in the speed-to-jumpHeight chart (when Speed Booster is active) to achieve a higher jump height than if done with all the available running room"
                },
                {
                  "name": "canCWJ",
                  "requires": [
                    "canTrickyJump",
                    "canWalljump"
                  ],
                  "note": [
                    "Continuous Wall Jump. Without turning around, spinjump forward and then wall jump off a solid object to retain all foreward momentum.",
                    "The more speed Samus has, the smaller the frame window for the CWJ.",
                    "A slow CWJ uses a wall or ledge near the initial jump point.",
                    "A fast CWJ will wall jump using the opposite side of a distant object."
                  ]
                },
                {
                  "name": "canFlatleyJump",
                  "requires": [ "canTrickyJump" ],
                  "note": [
                    "Positioning Samus at the very edge of a platform, facing away, then turning around and jumping to initiate the jump from a position that is off the platform (and slightly below it)",
                    "Sometimes referred to as a corner jump."
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "canWalljump",
          "requires": [],
          "note": "Jump off walls, as taught by the Etecoons",
          "extensionTechs": [
            {
              "name": "canPreciseWalljump",
              "requires": [ "canWalljump" ],
              "note": "A wall jump that needs to be performed at a fairly precise spot in order to yield the desired result.",
              "extensionTechs": [
                {
                  "name": "canDelayedWalljump",
                  "requires": [ "canPreciseWalljump" ],
                  "note": "A precise wall jump that additionally needs to done as far from the wall as possible.",
                  "extensionTechs": [
                    {
                      "name": "canInsaneWalljump",
                      "requires": [ "canDelayedWalljump" ],
                      "note": "For delayed wall jumps that require extreme precision, in the vicinity of pixel+frame perfect."
                    }
                  ]
                },
                {
                  "name": "can2HighWallMidAirMorph",
                  "requires": [
                    "canPreciseWalljump",
                    "Morph"
                  ],
                  "note" : "Getting up a 2-tile-high jump in a morph passage by mid-air morphing off the opposite wall.  Morphing after a wall jump only requires one down press."
                }
              ]
            },
            {
              "name": "canConsecutiveWalljump",
              "requires": [ "canWalljump" ],
              "note" : "Climbing a wall with three or more consecutive wall jumps without a mistake.",
              "extensionTechs": [
                {
                  "name": "canFastWalljumpClimb",
                  "requires": [ "canConsecutiveWalljump" ],
                  "note": "Climbing a wall with consecutive wall jumps very quickly, e.g. for setting up a full halfie."
                },
                {
                  "name": "canStaggeredWalljump",
                  "requires": [ "canConsecutiveWalljump" ],
                  "note" : "Controlling wall jump height and positioning to dodge enemies or wait for something."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "Bomb Jumps",
      "description": "Techs that have to do with using bomb explosions to propel Samus",
      "techs": [
        {
          "name": "canUnmorphBombBoost",
          "requires": [ "h_canBombThings" ],
          "note": "A tech that involves mid-air morphing to drop a Morph Bomb or PB, then mid-air unmorphing to briefly hover above the bomb, then using the bomb blast to go just a bit higher than max jump height"
        },
        {
          "name": "canWallJumpBombBoost",
          "requires": [
            "canWalljump",
            "h_canBombThings"
          ],
          "note": [
            "The ability to accurately place a Morph Bomb or PB in midair following a wall jump.  Then using that bomb explosion to propel Samus forward.",
            "There is a timing component where the bomb is placed while rising then hit while falling, and a momentum component for maximizing horizontal distance."
          ]
        },
        {
          "name": "canBombHorizontally",
          "requires": [ "h_canBombThings" ],
          "note": "A horizontal bomb jump using a single bomb. Since it uses one bomb, it works with PBs as well.",
          "extensionTechs": [
            {
              "name": "canHBJ",
              "requires": [
                "h_canUseMorphBombs",
                "canBombHorizontally"
              ],
              "note": "A horizontal bomb jump using two bombs. Longer range than single HBJ, much harder to execute, doesn't work with PBs."
            }
          ]
        },
        {
          "name": "canIBJ",
          "requires": [ "h_canUseMorphBombs" ],
          "note": "Infinite Bomb Jump. Using consecutive bomb jumps to gain height indefinitely.",
          "extensionTechs": [
            {
              "name": "canJumpIntoIBJ",
              "requires": [ "canIBJ" ],
              "note": "The ability to start an IBJ from a jump. Can be required in strats that need Samus to IBJ up faster or to avoid something near the ground."
            },
            {
              "name": "canBombAboveIBJ",
              "requires": [ "canIBJ" ],
              "note": "The ability to break blocks above Samus while maintaining an ongoing IBJ."
            },
            {
              "name": "canCeilingBombJump",
              "requires": [ "canBombAboveIBJ" ],
              "note": "The ability to IBJ to the ceiling and place bombs at a steady rhythm while also moving horizontally."
            },
            {
              "name": "canDiagonalBombJump",
              "requires": [ "canIBJ" ],
              "note": "The ability to IBJ with backspin which results in diagonal movement."
            },
            {
              "name": "canSandIBJ",
              "requires": [ "canJumpIntoIBJ" ],
              "note": "The ability to start an IBJ off a jump on sand. Pretty obnoxious."
            },
            {
              "name": "canDoubleBombJump",
              "requires": [ "canIBJ" ],
              "note": "The ability to place a second bomb above the first during an infinite bomb jump in order to ascend faster."
            },
            {
              "name": "canStaggeredIBJ",
              "requires": [ "canIBJ" ],
              "note": "The ability to change the bomb placement timing in order control the speed with which you gain height."
            }
          ]
        },
        {
          "name": "canBombJumpWaterEscape",
          "requires": [ "h_canBombThings" ],
          "note": "From a submerged platform, setting up a single bomb jump above the water line to propel Samus up and out of the water.",
          "devNote": "It's recommended to apply a number of tries as leniency here for the PBs version."
        }
      ]
    },
    {
      "name": "Enemy-Dependent",
      "description": "Techs that depend on the presence of an enemy",
      "techs": [
        {
          "name": "canUseEnemies",
          "requires": [],
          "note": "Using an enemy in a room to accomplish something that couldn't be done if it weren't there",
          "devNote": "Turning this off should greatly improve the logic for enemizer contexts",
          "extensionTechs": [
            {
              "name": "canSnailClimb",
              "requires": [ "canUseEnemies" ],
              "note": "Piggybacking on top of a climbing snail to get up a wall"
            },
            {
              "name": "canDamageBoost",
              "requires": [ "canUseEnemies" ],
              "note": "Taking damage from an enemy to assist Samus in her movement",
              "extensionTechs": [
                {
                  "name": "canContinuousDboost",
                  "requires": [ "canDamageBoost" ],
                  "note": "A tech that involves multiple damage boosts with precise timing. No room for missing one of them."
                }
              ]
            },
            {
              "name": "canSnailClip",
              "requires": [
                "canUseEnemies",
                "canCeilingClip",
                "Gravity"
              ],
              "note": "Manipulating a snail's position to setup and clip through a one-tile-thick ceiling.",
              "devNote": "Currently requires Gravity because all known applications are underwater, but maybe there should be a helper for that instead?"
            },
            {
              "name": "canManipulateMellas",
              "requires": [ "canUseEnemies" ],
              "note": [
                "The ability to identify a bug enemy that moves in a diving pattern (Mellow, Mella, or Menu) and inches upwards or downwards with each dive.",
                "Once that enemy has been identified, subsequently making it dive repeatedly until it is at the proper height to execute a strat."
              ]
            },
            {
              "name": "canSamusEaterStandUp",
              "requires": [ "canUseEnemies" ],
              "note": "Keep control of most of Samus' abilities while captured by the Samus Eater.  Useful for building a shinespark without moving."
            },
            {
              "name": "canKago",
              "requires": [ "canUseEnemies" ],
              "note": [
                "Clipping through an enemy by performing an uninterruptible animation while coming into contact with them.",
                "These include morphing, unmorphing, or performing a turnaround."
              ]
            },
            {
              "name": "canUseFrozenEnemies",
              "requires": [
                "Ice",
                "canUseEnemies"
              ],
              "note": "Can use Ice Beam to freeze enemies to use as platforms, or as walljump supports, to reach higher areas",
              "extensionTechs": [
                {
                  "name": "canMochtroidIceClip",
                  "requires": [
                    "canCeilingClip",
                    "canUseFrozenEnemies"
                  ],
                  "note": "Using a frozen Mochtroid to clip through a one-tile-thick ceiling."
                },
                {
                  "name": "canMochtroidIceClimb",
                  "requires": [ "canUseFrozenEnemies" ],
                  "note": "Using a Mochtroid's movement to climb upwards by continually freezing it higher up",
                  "extensionTechs": [
                    {
                      "name": "canSandMochtroidIceClimb",
                      "requires": [ "canMochtroidIceClimb" ],
                      "note": "Setting up a Mochtroid climb from a sand floor, where failure in a suitless environment can mean death"
                    }
                  ]
                },
                {
                  "name": "canRemorphZebetiteSkip",
                  "requires": [
                    "canUseFrozenEnemies",
                    "Wave",
                    "Morph"
                  ],
                  "note": [
                    "Being able to glitch through the second Zebetite barrier, clipping through it by morphing/unmorphing/remorphing on a frozen Rinka.",
                    "Spinjump into the lower portion of the zebetite to becoming wedged between it and the frozen rinka. Morphing twice raises Samus to the right height to roll through.",
                    "Also known as the Springball Zebetite Skip."
                  ]
                },
                {
                  "name": "canIceZebetitesSkip",
                  "requires": [ "canUseFrozenEnemies" ],
                  "note":[
                    "Being able to glitch through the Mother Brain zebetites by using a frozen Rinka and iFrames.",
                    "Spinjump or Down-Back onto the rinka after acquiring iFrames to clip inside of the zebetite.  Then jump through.",
                    "Zebetites cause iframes but deal no damage."
                  ]
                },
                {
                  "name": "canTrickyUseFrozenEnemies",
                  "requires": [ "canUseFrozenEnemies" ],
                  "note": [
                    "Can use Ice Beam to freeze enemies in especially precise positionings.",
                    "If supers are available, they can be used to knock wall crawlers off walls and freeze them mid air."
                  ],
                  "extensionTechs": [
                    {
                      "name": "canNonTrivialIceClip",
                      "requires": [
                        "canCeilingClip",
                        "canTrickyUseFrozenEnemies",
                        {"or":[
                          "canPixelPerfectIceClip",
                          {"and":[
                            "Morph",
                            "canXRayStandUp"
                          ]}
                        ]}
                      ],
                      "note": [
                        "A tech common to all ice clips except Mochtroid (which lines up perfectly so is pretty trivial).",
                        "It requires either pixel perfect enemy positioning or the ability to force a standup with XRay."
                      ],
                      "extensionTechs": [
                        {
                          "name": "canWallCrawlerIceClip",
                          "requires": [ "canNonTrivialIceClip" ],
                          "note": "Using a frozen wall crawling enemy (such as a Zeela or Geemer) to clip through a one-tile-thick ceiling."
                        },
                        {
                          "name": "canPuyoIceClip",
                          "requires": [ "canNonTrivialIceClip" ],
                          "note": "Using a frozen Puyo to clip through a one-tile-thick ceiling."
                        },
                        {
                          "name": "canBeetomIceClip",
                          "requires": [ "canNonTrivialIceClip" ],
                          "note": [
                            "Using an attached Beetom to precisely freeze it in place to be used for a clip through a one-tile-thick ceiling.",
                            "Freezing an attached Beetom works best when facing right and vertical speed is low."
                          ]
                        },
                        {
                          "name": "canMultiviolaIceClip",
                          "requires": [ "canNonTrivialIceClip" ],
                          "note": "Using a frozen Multiviola to clip through a one-tile-thick ceiling."
                        },
                        {
                          "name": "canMellaIceClip",
                          "requires": [ "canNonTrivialIceClip" ],
                          "note": "Using a frozen Mella to clip through a one-tile-thick ceiling."
                        }
                      ]
                    },
                    {
                      "name": "canPixelPerfectIceClip",
                      "requires": [
                        "canCeilingClip",
                        "canTrickyUseFrozenEnemies"
                      ],
                      "note": "Setting up an ice clip at exactly the right pixel, so the clip can work without the leniency allowed by an X-Ray standup"
                    },
                    {
                      "name": "canWallIceClip",
                      "requires": [
                        "canTrickyUseFrozenEnemies",
                        "Wave"
                      ],
                      "note": [
                        "Collision will prioritize frozen enemies before walls which allows Samus to clip 1 pixel into a wall if an enemy is there.",
                        "Enemies that fly through walls may be repeatedly frozen to advance 1 pixel at a time to eventually allow Samus to pass through a wall or touch a door transition."
                      ]
                    },
                    {
                      "name": "canCrazyCrabClimb",
                      "requires": [ "canTrickyUseFrozenEnemies" ],
                      "note": [
                        "Repeatedly freezing a crab to climb up an uneven wall, using no other support.",
                        "These climbs often require high precision when jumping around ledges: too many pixels in any direction and Samus may fall off or clip through the crab.",
                        "This includes only tricky versions of crab climbs and may include manipulating global and non-global crabs, multiple at a time, and freezing crabs in midair."
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "Shots",
      "description": "Techs that revolve around shooting",
      "techs": [
        {
          "name": "canHitbox",
          "requires": [],
          "note": [
            "The ability to pass through some enemies undamaged by shooting.",
            "May involve running through the enemy after making its hitbox inactive (e.g. Metal Pirates) or while the enemy has iframes (e.g. using Plasma)."
          ]
        },
        {
          "name": "canOffScreenSuperShot",
          "requires": [
            "Super",
            {"ammo": {
              "type": "Super",
              "count": 1
            }}
          ],
          "note": "The ability to shoot a Super Missile at a precise location to hit an offscreen inanimate target, e.g. a Super block.",
          "devNote": [
            "It's recommended to apply a number of tries as leniency here.",
            "Although, the difficulty is very variable by strats so maybe it's preferrable to apply a leniency by individual strat rather than to the tech."
          ]
        },
        {
          "name": "canGateGlitch",
          "requires": [],
          "note": "The ability to open a left-facing blue or green gate from the right, using missiles or supers.",
          "devNote": [
            "A number of tries can't be applied as leniency on this tech, because the resource cost is not included in the tech (it varies with circumstances).",
            "There is a helper for all combinations of circumstances, and it's recommended to apply a number of tries as leniency on all such helpers that use this tech."
          ]
        },
        {
          "name": "canWrapAroundShot",
          "requires": [
            "Wave",
            "Charge"
          ],
          "note": "The ability to reach targets on the other side of a room by shooting Wave Beam at the right spot in the opposite wall."
        },
        {
          "name": "canGrappleClip",
          "requires": [ "Grapple" ],
          "note": "Using Grapple on an enemy or grapple block to clip into walls and other surfaces"
        }
      ]
    },
    {
      "name": "Speed Booster",
      "description": "Techs related to Speed Booster use. Note that short charging is not a tech per se.",
      "techs": [
        {
          "name": "canShinespark",
          "requires": [ "SpeedBooster" ],
          "note": "The ability to use the Speed Booster to store a charge, then fly in a direction until an obstacle is hit.",
          "extensionTechs": [
            {
              "name": "canMidairShinespark",
              "requires": [ "canShinespark" ],
              "note": "The ability to jump and shinespark midair: vertically, horizontally, or diagonally. This is not used to simply save energy."
            },
            {
              "name": "canShinechargeMovement",
              "requires": [ "canShinespark" ],
              "note": [
                "The ability to perform simple jumps with a shinespark charge timer running to get into position to shinespark.",
                "This reposition may be necessary to avoid obstacles, conserve energy, etc."
              ],
              "extensionTechs": [
                {
                  "name": "canShinechargeMovementComplex",
                  "requires": [ "canShinechargeMovement" ],
                  "note": [
                    "The ability to make multiple movement actions with a shinespark charge timer running to get into position to shinespark.",
                    "This reposition may be necessary to avoid obstacles, conserve energy, etc."
                  ]
                }
              ]
            },
            {
              "name": "canUseSpeedEchoes",
              "requires": [ "canShinespark" ],
              "note": "Using as a weapon the Samus echoes that are emitted after a shinespark bonk."
            },
            {
              "name": "canSpeedZebetitesSkip",
              "requires": [
                "canShinespark",
                {"enemyDamage": {
                  "enemy": "Rinka",
                  "type": "contact",
                  "hits": 1
                }}
              ],
              "note": [
                "Being able to glitch through the Mother Brain zebetites by using a shinespark and iFrames.",
                "The tech itself isn't that difficult, what makes it difficult with the vanilla layout is getting the short charge."
              ]
            },
            {
              "name": "canShinesparkWithReserve",
              "requires": [ "canShinespark" ],
              "note": "Manually triggering reserve energy during a shinespark to extend the distance travelled.",
              "devNote": "This tech shouldn't need to be added to strat requirements."
            }
          ]
        },
        {
          "name": "canBlueSpaceJump",
          "requires": [
            "SpeedBooster",
            "SpaceJump"
          ],
          "note": "Using SpaceJump to carry SpeedBooster's blue suit into some destructible blocks that couldn't be reached just by running and jumping"
        },
        {
          "name": "canSpeedKeep",
          "requires": ["SpeedBooster"],
          "note": [
            "Maintaining the desctructive capabilities of speedbooster after running has stopped.",
            "Used to fall on top of breakable bomb blocks or enemies.",
            "Perfromed by storing a spark while falling off a ledge, holding angle and crouching after storing a spark, or unmorphing."
          ],
          "devNote": "This is not a momentum continuing action like canBlueSpaceJump"
        }
      ]
    },
    {
      "name": "Meta",
      "description": "A tech not referring to gameplay but to the handelling of the model itself.",
      "techs": [
        {
          "name": "canRiskPermanentLossOfAccess",
          "requires": [],
          "note": [
            "The acceptance that changes to game state can result in a strat becoming impossible.",
            "If that strat needed to be executed before the game state change, the game becomes incompletable.",
            "And that the \"mistake\" may not become visible until much later."
          ]
        }
      ]
    },
    {
      "name": "Miscellaneous",
      "description": "A catch-all for techs that don't fit in anywhere else",
      "techs": [
        {
          "name": "canCrystalFlash",
          "requires": [
            {"ammo": {
              "type": "Missile",
              "count": 10
            }},
            {"ammo": {
              "type": "Super",
              "count": 10
            }},
            {"ammo": {
              "type": "PowerBomb",
              "count": 11
            }},
            "Morph",
            "Missile",
            "Super",
            "PowerBomb"
          ],
          "note": "Performing a Crystal Flash.",
          "extensionTechs": [
            {
              "name": "canCrystalFlashClip",
              "requires": [ "canCrystalFlash" ],
              "note": [
                "Using a Crystal Flash below a non-respawning crumble block to clip into the block while holding down to break it.",
                "This tech is not required for simply unmorphing in a morph tunnel."
              ],
              "extensionTechs": [
                {
                  "name": "canCrystalFlashGrappleClip",
                  "requires": [
                    "canCrystalFlashClip",
                    "Grapple"
                  ],
                  "note": [
                    "Using a Crystal Flash below a one-tile-thick ceiling, then using grapple to force Samus on top of it.",
                    "To do this, select grapple as your health refills then hold down and mash shoot, the earlier you shoot the better."
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "canMaridiaTubeClip",
          "requires": [],
          "note": "The ability to clip into the Maridia tube from above."
        },
        {
          "name": "canCeilingClip",
          "requires": [],
          "note": [
            "Basic variant of jumping into a two block high space and performing the actions needed to clip up through a one-tile-thick ceiling.",
            "This often uses enemies, so is required for enemy clip enemies that are extensions of canUseEnemies."
          ]
        },
        {
          "name": "canPartialFloorClip",
          "requires": [],
          "note": [
            "While standing upright in a two-tile gap between solid tiles, jump in such a way as to clip a pixel into the below floor as a setup to another tech.",
            "This is done by, in quick succession: jumping, aiming down, and then pressing forward."
          ],
          "devNote": "Cancelling a spinjump with angle can get the same effect, but has very limited logical uses."
        },
        {
          "name": "canTurnaroundAimCancel",
          "requires": [],
          "note": "Canceling an aim angle while crouching and turning around, to wiggle to the right"
        },
        {
          "name": "canMomentumConservingTurnaround",
          "requires": [],
          "note": [
            "Uses the uninteruptable frames of turning around in order to continue moving after hitting a solid object.",
            "Can be used to make it through an opening door, or barely just past a ledge."
          ]
        },
        {
          "name": "canXrayWaitForIFrames",
          "requires": [ "XRayScope" ],
          "note": [
            "Use X-Ray to pause time until invulnerability frames are finished",
            "Combine with Plasma Beam to repeatedly damage enemies with one fired shot, called Microwave",
            "If used while inside an enemy projectile or thorns, IFrames will be restarted but no damage will be taken."
          ]
        },
        {
          "name": "canXrayTurnaround",
          "requires": [ "XRayScope" ],
          "note": [
            "Using X-Ray to turn around in place without changing pixel position.",
            "Alternating X-Ray turnarounds with regular turnarounds enables movement in either direction even while crouched."
          ]
        },
        {
          "name": "canXRayStandUp",
          "requires": [ "XRayScope" ],
          "note": "Force Samus to stand up, from a crouching position, by canceling use of the XRay Scope while turning around",
          "extensionTechs": [
            {
              "name": "canXRayClimb",
              "requires": [ "canXRayStandUp" ],
              "note": [
                "All-purpose tech for X-Ray climbing by repeatedly using X-Ray's forced standup trick to climb up through walls.",
                "This tech is uncoupled from different setups that place Samus in a position to do this and only refers to the actual climbing portion."
              ],
              "extensionTechs": [
                {
                  "name": "canRightFacingDoorXRayClimb",
                  "requires": [
                    "canXRayClimb",
                    "canStationarySpinJump"
                  ],
                  "note": [
                    "Enter the partner door (which faces left in the adjacent room) with a stationary spinjump moving away to touch the transition with momentum that will get you stuck in the destination door.",
                    "That destination door is right-facing in the room where the X-Ray climb happens.",
                    "Then use the X-Ray's forced standup trick to climb up through in-bound walls."
                  ]
                },
                {
                  "name": "canLeftFacingDoorXRayClimb",
                  "requires": [
                    "canXRayClimb",
                    "canStationarySpinJump"
                  ],
                  "note": [
                    "Though using the same techs, the setup is a bit different for left-facing doors. ",
                    "It requires a dashing stationary spinjump into a doorcheck, then holding down as Samus arrives in the other room.",
                    "Then use normal X-Ray climbing."
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
