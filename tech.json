{
  "$schema": "./schema/m3-tech.schema.json",
  "techCategories": [
    {
      "name": "General",
      "description": "General configuration techs",
      "techs": [
        {
          "name": "canBePatient",
          "requires": [],
          "note": "Executing a strat that requires waiting or doing the same thing over and over again for over 3 minutes, even with good execution"
        },
        {
          "name": "canPrepareForNextRoom",
          "requires": [],
          "note": "The ability to perform an action as part of a strat that occurs following a room transition."
        },
        {
          "name": "canSuitlessLavaDive",
          "requires": [],
          "note": "Navigating deep lava without Gravity. This isn't limited to the Lava Dive Room, but it does exclude all rooms with just shallow lava."
        },
        {
          "name": "canHeatRun",
          "requires": [],
          "note": "Navigating heat rooms without immunity to heat damage."
        },
        {
          "name": "canSuitlessMaridia",
          "requires": [],
          "note": [
            "Navigating Maridia without Gravity.",
            "This is not required for simple underwater platforming where missing a jump does not leave the player stuck somewhere, or for falling down a submerged room."
          ],
          "extensionTechs": [
            {
              "name": "canSunkenDualWallClimb",
              "requires": [
                "canSuitlessMaridia",
                "HiJump",
                "canWalljump"
              ],
              "note": "Using a series of rapid, consecutive wall jumps underwater, on two nearby walls, to climb upwards.",
              "extensionTechs": [
                {
                  "name": "canWaterBreakFree",
                  "requires": [
                    "canSunkenDualWallClimb"
                  ],
                  "note": "Managing to break free of the water while doing a sunken dual wall climb, without the help of space jump"
                }
              ]
            },
            {
              "name": "canQuickLowTideWalljumpWaterEscape",
              "requires": [
                "canSuitlessMaridia",
                "canWalljump"
              ],
              "note": "The ability to get out of water by walljumping while the water is at its lowest point, and to do so in a timely manner, e.g. before a Yapping Maw drags you into a sand pit.",
              "devNote":"This is so specific. Can we do something to remove it?"
            }
          ]
        }
      ]
    },
    {
      "name": "Movement",
      "description": "General movement tech, excluding jumps that have their own category",
      "techs": [
        {
          "name": "canDownGrab",
          "requires": [],
          "note":"The ability to aim down to reduce Samus' hitbox to reach higher ledges. Commonly paired with a Crouch Jump."
        },
        {
          "name": "canMoonfall",
          "requires": [],
          "note": "Jumping off a ledge while moonwalking to fall with an uncapped speed"
        },
        {
          "name": "canResetFallSpeed",
          "requires": [ "Morph" ],
          "note": "Using unmorph as a way to reset fall speed.",
          "devNote": "Taking enemy damage can get the same effect but more situations where this is used would need to be found first."
        },
        {
          "name": "canLateralMidAirMorph",
          "requires": [ "Morph" ],
          "note": "Performing the same input as a mockball, but in midair, in order to maintain forward momentum while morphing in midair",
          "extensionTechs": [
            {
              "name": "canSpringBallJump",
              "requires": [
                "canLateralMidAirMorph",
                "SpringBall"
              ],
              "note": "Using a lateral mid-air morph to bounce off a surface with SpringBall while retaining previous momentum."
            },
            {
              "name": "canStationaryLateralMidAirMorph",
              "requires": ["canLateralMidAirMorph"],
              "note": [
                "While performing a stationary vertical jump, it's possible to mid-air morph in a manner similar to a lateral mid-air morph.",
                "Doing this immediately gives lateral momentum equivalent to maximum walk speed.",
                "This is meaningless under normal physics, but has underwater applications."
              ]
            }
          ]
        },
        {
          "name": "canMockball",
          "requires": [ "Morph" ],
          "note": [
            "Maintaining running speed while morphed, by holding jump and down (to crouch) during a lateral jump, then morphing as Samus hits the ground while holding jump and transition from holding down to holding forward.",
            "Sometimes referred to as a Machball."
          ]
        },
        {
          "name": "canTwoTileSqueeze",
          "requires": [],
          "note": "Taking advantage of the smaller hitbox of spinjump and down-aim to squeeze through two-tile gaps."
        },
        {
          "name": "canMetroidAvoid",
          "requires": [],
          "note": "Being proficient at avoiding Metroids"
        },
        {
          "name": "canQuickCrumbleEscape",
          "requires": [],
          "note":"The combination of a crumble quick drop, and landing on a lower surface and jumping back over the crumble block before it re-forms."
        },
        {
          "name": "can3HighMidAirMorph",
          "requires": [
            "Morph"
          ],
          "note" : "A mid-air morph that has to be done within an elevation difference of 3 tiles (with a ceiling removing any extra room). It's a lot more precise than with more room."
        },
        {
          "name": "canBabyMetroidAvoid",
          "requires": [],
          "note": "Being proficient at avoiding the baby Metroid"
        },
        {
          "name": "canTunnelCrawl",
          "requires": [],
          "devNote": "This should require morph, but can't list it here otherwise the morphless tech will require it. Morph should be listed anywhere this is called.",
          "note": [
            "Moving along a 2-tile-high passage while standing up by repeatedly spin-jumping and then pressing down.",
            "The tech comes with softlock risks without Morph Ball, but this is the safer variant where Morph is available and no softlock can occur."
          ],
          "extensionTechs": [
            {
              "name": "canMorphlessTunnelCrawl",
              "requires": ["canTunnelCrawl"],
              "note": "Moving along a 2-tile-high passage while standing up by repeatedly spin-jumping and then pressing down. Comes with softlock risks without Morph Ball."
            }
          ]
        }
      ]
    },
    {
      "name": "Jumps",
      "description": "Techs related to jumping. Excludes bomb jumping.",
      "techs": [
        {
          "name": "canCrouchJump",
          "requires": [],
          "note":"The ability to crouch before jumping to reach higher ledges. Commonly paired with a Down Grab."
        },
        {
          "name": "canGravityJump",
          "requires": [ "Gravity" ],
          "note": "Turning off Gravity Suit right after the start of an underwater jump to achieve higher height",
          "extensionTechs": [
            {
              "name": "canLavaGravityJump",
              "requires": [ "canGravityJump" ],
              "note": "Doing a gravity Jump in lava, causing Samus to take damage",
              "devNote": "Does not require canSuitlessLavaDive because the amount of time spent in lava with Gravity off is very limited"
            },
            {
              "name": "canGravityWalljump",
              "requires": [
                "canGravityJump",
                "canWalljump"
              ],
              "note": "Executing a gravity jump off a walljump"
            }
          ]
        },
        {
          "name": "canIframeSpikeJump",
          "requires": [],
          "note": "Using i-frames to setup a jump from a spike floor or wall"
        },
        {
          "name": "canStationarySpinJump",
          "requires": [],
          "note": [
            "Quickly press and release forward and then immediately press jump (after stopping) to spin jump with no horizontal movement.",
            "Can be done walking or running to slightly different effect."
          ]
        },
        {
          "name": "canSpringBallJumpMidAir",
          "requires": [
            "Morph",
            "SpringBall"
          ],
          "note": [
            "Reaching a higher than normal height with a jump, by morphing in mid-air and then turning on SpringBall while still climbing upwards.",
            "This makes it possible to use SpringBall while Samus is still climbing upwards, for an additional jump."
          ],
          "extensionTechs": [
            {
              "name": "canSpringwall",
              "requires": [
                "canSpringBallJumpMidAir",
                "canWalljump"
              ],
              "note": [
                "A springball jump that starts with a walljump to gain more height.",
                "It often relies on the momentum change when equipping or unequipping SpringBall while morphed and moving horizontally."
              ]
            },
            {
              "name": "canDoubleSpringBallJumpMidAir",
              "requires": [
                "Morph",
                "SpringBall",
                "HiJump"
              ],
              "note": [
                "Using the SpringBallJumpMidAir twice during a single jump to gain even more height. This only works underwater with HiJump.",
                "This consists of a tight variant of SpringBallJumpMidAir, then turning off spring ball, then a second SpringBallJumpMidAir all while still climbing upwards."
              ]
            }
          ]
        },
        {
          "name": "canCrumbleJump",
          "requires": [],
          "note": "The ability to reliably jump while landing on a crumble block. This may employ the small amount of jump buffering the game offers.",
          "extensionTechs": [
            {
              "name": "canCrumbleSpinJump",
              "requires": [ "canCrumbleJump" ],
              "note": "The ability to reliably spin jump while landing on a crumble block. This is much tighter than regular crumble jumps because the jump buffering does not help."
            }
          ]
        },
        {
          "name": "canGrappleJump",
          "requires": [
            "Grapple",
            "Morph"
          ],
          "note": "Using grapple to propel yourself upwards, then continuously morphing/unmorphing/jumping in midair to climb upwards",
          "devNote": "This much more lenient with hjb, should we do something to distinguish the two?",
          "extensionTechs": [
            {
              "name": "canDraygonTurretGrappleJump",
              "requires": [
                "canGrappleJump",
                "HiJump",
                {"draygonElectricityFrames": 60}
              ],
              "note": "Using grapple jump off a Draygon turret",
              "devNote": "FIXME does it actually require HiJump?"
            }
          ]
        },
        {
          "name": "canTrickyJump",
          "requires": [],
          "note": "Executing a jump that requires very precise timing",
          "extensionTechs": [
            {
              "name": "canTrickyDashJump",
              "requires": [
                "canTrickyJump",
                "SpeedBooster"
              ],
              "note": "Jumping during a spike in the speed-to-jumpHeight chart (when Speed Booster is active) to achieve a higher jump height than if done with all the available running room"
            },
            {
              "name": "canCWJ",
              "requires": [ "canTrickyJump" ],
              "note": [
                "Continuous Walljump. Doing a precise forward jump that causes Samus to move back down right after the top of a wall while retaining her momentum.",
                "This leads to a tiny window where a walljump can be performed, still with the original momentum."
              ]
            },
            {
              "name": "canFlatleyJump",
              "requires": [ "canTrickyJump" ],
              "note": "Turn around off of a ledge and jump at the last moment. AKA corner jump."
            }
          ]
        },
        {
          "name": "canWalljump",
          "requires": [],
          "note": "Jump off walls, as taught by the Etecoons",
          "extensionTechs": [
            {
              "name": "canPreciseWalljump",
              "requires": [
                "canWalljump"
              ],
              "note": "A walljump that needs to be performed at a fairly precise spot in order to yield the desired result.",
              "extensionTechs": [
                {
                  "name": "canDelayedWalljump",
                  "requires": ["canPreciseWalljump"],
                  "note": "A precise walljump that additionally needs to done as far from the wall as possible.",
                  "extensionTechs": [
                    {
                      "name": "canInsaneWalljump",
                      "requires": [ "canDelayedWalljump" ],
                      "note": "For delayed walljumps that require extreme precision, in the vicinity of pixel+frame perfect."
                    }
                  ]
                }
              ]
            },
            {
              "name": "can2HighWallMidAirMorph",
              "requires": [
                "canWalljump",
                "Morph"
              ],
              "note" : "Getting up a 2-tile-high jump in a morph passage by mid-air morphing off the opposite wall"
            },
            {
              "name": "canConsecutiveWalljump",
              "requires": [
                "canWalljump"
              ],
              "note" : "Climbing a wall with several consecutive walljumps.",
              "extensionTechs": [
                {
                  "name": "canFastWalljumpClimb",
                  "requires": [
                    "canConsecutiveWalljump"
                  ],
                  "note": "Climbing a wall with consecutive walljumps very quickly, e.g. for setting up a full halfie."
                }
              ]
            }
          ]
        },
        {
          "name": "canFlatleyTurnaroundJump",
          "requires": [],
          "note": "Positioning Samus at the very edge of a platform, facing away, then turning around and jumping to initiate the jump from a position that is off the platform (and slightly below it)"
        }
      ]
    },
    {
      "name": "Bomb Jumps",
      "description": "Techs that have to do with using bomb explosions to propel Samus",
      "techs": [
        {
          "name": "canUnmorphBombBoost",
          "requires": [ "h_canBombThings" ],
          "note": "A tech that involves mid-air morphing to drop a Morph Bomb or PB, then mid-air unmorphing to briefly hover above the bomb, then using the bomb blast to go just a bit higher than max jump height"
        },
        {
          "name": "canWallJumpBombBoost",
          "requires": [
            "canWalljump",
            "h_canBombThings"
          ],
          "note": [
            "The ability to accurately place a Morph Bomb or PB in midair following a walljump.  Then using that bomb explosion to propel Samus forward.",
            "There is a timing component where the bomb is placed while rising then hit while falling, and a momentum component for maximizing horizontal distance."
          ]
        },
        {
          "name": "canBombHorizontally",
          "requires": ["h_canBombThings"],
          "note": "A horizontal bomb jump using a single bomb. Since it uses one bomb, it works with PBs as well.",
          "extensionTechs": [
            {
              "name": "canHBJ",
              "requires": [
                "h_canUseMorphBombs",
                "canBombHorizontally"
              ],
              "note": "A horizontal bomb jump using two bombs. Longer range than single HBJ, much harder to execute, doesn't work with PBs."
            }
          ]
        },
        {
          "name": "canIBJ",
          "requires": [
            "Morph",
            "Bombs"
          ],
          "note": "Infinite Bomb Jump. Using consecutive bomb jumps to gain height indefinitely.",
          "extensionTechs": [
            {
              "name": "canJumpIntoIBJ",
              "requires": [ "canIBJ" ],
              "note": "The ability to start an IBJ from a jump. Can be required in strats that need Samus to IBJ up faster or to avoid something near the ground."
            },
            {
              "name": "canBombAboveIBJ",
              "requires": [ "canIBJ" ],
              "note": "The ability to break blocks above Samus while maintaining an ongoing IBJ."
            },
            {
              "name": "canCeilingBombJump",
              "requires": [ "canBombAboveIBJ" ],
              "note": "The ability to IBJ to the ceiling and place bombs at a steady rhythm while also moving horizontally."
            },
            {
              "name": "canDiagonalBombJump",
              "requires": [ "canIBJ" ],
              "note": "The ability to IBJ with backspin which results in diagonal movement."
            },
            {
              "name": "canSandIBJ",
              "requires": [ "canJumpIntoIBJ" ],
              "note": "The ability to start an IBJ off a jump on sand. Pretty obnoxious."
            },
            {
              "name": "canDoubleBombJump",
              "requires": [ "canIBJ" ],
              "note": "The ability to place a second bomb above the first during an infinite bomb jump in order to ascend faster."
            },
            {
              "name": "canStaggeredBombJump",
              "requires": [ "canIBJ" ],
              "note": "The ability to change the bomb placement timing in order control the speed with which you gain height."
            }
          ]
        },
        {
          "name": "canBombJumpWaterEscape",
          "requires": ["h_canPassBombPassages"],
          "note": "From a submerged platform, setting up a single bomb jump above the water line to propel Samus up and out of the water.",
          "devNote": "It's recommended to apply a number of tries as leniency here for the PBs version."
        }
      ]
    },
    {
      "name": "Enemy-Dependent",
      "description": "Techs that depend on the presence of an enemy",
      "techs": [
        {
          "name": "canUseEnemies",
          "requires": [],
          "note": "Using an enemy in a room to accomplish something that couldn't be done if it weren't there",
          "devNote": "Turning this off should greatly improve the logic for enemizer contexts",
          "extensionTechs": [
            {
              "name": "canGrappleClip",
              "requires": [
                "Grapple",
                "canUseEnemies"
              ],
              "note": "Using Grapple on an enemy to clip into walls and other surfaces"
            },
            {
              "name": "canSnailClimb",
              "requires": ["canUseEnemies"],
              "note": "Piggybacking on top of a climbing snail to get up a wall"
            },
            {
              "name": "canDamageBoost",
              "requires": [ "canUseEnemies"],
              "note": "Taking damage from an enemy to assist Samus in her movement",
              "extensionTechs": [
                {
                  "name": "canContinuousDboost",
                  "requires": [ "canDamageBoost" ],
                  "note": "A tech that involves multiple damage boosts with precise timing. No room for missing one of them."
                }
              ]
            },
            {
              "name": "canSnailClip",
              "requires": [
                "canUseEnemies",
                "canCeilingClip",
                "Gravity"
              ],
              "note": "Manipulating a snail's position to setup a ceiling clip.",
              "devNote": "Currently requires Gravity because all known applications are underwater, but maybe there should be a helper for that instead?"
            },
            {
              "name": "canManipulateMellas",
              "requires": ["canUseEnemies"],
              "note": [
                "The ability to identify a bug enemy that moves in a diving pattern (Mellow, Mella, or Menu) and inches upwards or downwards with each dive.",
                "Once that enemy has been identified, subsequently making it dive repeatedly until it is at the proper height to execute a strat."
              ]
            },
            {
              "name": "canSamusEaterStandUp",
              "requires": [ "canUseEnemies" ],
              "note": "Keep control of most of Samus' abilities while captured by the Samus Eater.  Useful for building a shinespark without moving."
            },
            {
              "name": "canUseFrozenEnemies",
              "requires": [ "Ice", "canUseEnemies" ],
              "note": "Can use Ice Beam to freeze enemies to use as platforms, or as walljump supports, to reach higher areas",
              "extensionTechs": [
                {
                  "name": "canMochtroidIceClip",
                  "requires": [
                    "canCeilingClip",
                    "canUseFrozenEnemies"
                  ],
                  "note": "Using a frozen Mochtroid to clip through a one-tile-high wall."
                },
                {
                  "name": "canMochtroidIceClimb",
                  "requires": [
                    "canUseFrozenEnemies"
                  ],
                  "note": "Using a Mochtroid's movement to climb upwards by continually freezing it higher up",
                  "extensionTechs": [
                    {
                      "name": "canSandMochtroidIceClimb",
                      "requires": [
                        "canMochtroidIceClimb"
                      ],
                      "note": "Setting up a Mochtroid climb from a sand floor, where failure in a suitless environment can mean death"
                    }
                  ]
                },
                {
                  "name": "canRemorphZebetiteSkip",
                  "requires": [
                    "canUseFrozenEnemies",
                    "Wave",
                    "Morph"
                  ],
                  "note": "Being able to glitch through the second Zebetite barrier, clipping through it by morphing/unmorphing/remorphing on a frozen Rinka."
                },
                {
                  "name": "canIceZebetitesSkip",
                  "requires": [
                    "canUseFrozenEnemies",
                    {"enemyDamage": {
                      "enemy": "Rinka",
                      "type": "contact",
                      "hits": 1
                    }}
                   ],
                  "note":"Being able to glitch through the Mother Brain zebetites by using a frozen Rinka and iFrames."
                },
                {
                  "name": "canTrickyUseFrozenEnemies",
                  "requires": [ "canUseFrozenEnemies" ],
                  "note": "Can use Ice Beam to freeze enemies in especially precise positionings.",
                  "extensionTechs": [
                    {
                      "name": "canNonTrivialIceClip",
                      "requires": [
                        "canCeilingClip",
                        "canTrickyUseFrozenEnemies",
                        {"or":[
                          "canPixelPerfectIceClip",
                          "canXRayStandUp"
                        ]}
                      ],
                      "note": [
                        "A tech common to all ice clips except Mochtroid (which lines up perfectly so is pretty trivial).",
                        "It requires either pixel perfect enemy positioning or the ability to force a standup with XRay."
                      ],
                      "extensionTechs": [
                        {
                          "name": "canWallCrawlerIceClip",
                          "requires": [ "canNonTrivialIceClip" ],
                          "note": "Using a frozen wall crawling enemy (such as a Zeela or Geemer) to perform a ceiling clip"
                        },
                        {
                          "name": "canPuyoIceClip",
                          "requires": [
                            "canNonTrivialIceClip"
                          ],
                          "note": "Using a frozen Puyo to clip through a one-tile-high wall."
                        },
                        {
                          "name": "canBeetomIceClip",
                          "requires": [ "canNonTrivialIceClip" ],
                          "note": "Using a frozen Beetom to perform a ceiling clip"
                        },
                        {
                          "name": "canMultiviolaIceClip",
                          "requires": [
                            "canNonTrivialIceClip"
                          ],
                          "note": "Using a frozen Multiviola to clip through a one-tile-high wall."
                        },
                        {
                          "name": "canMellaIceClip",
                          "requires": [
                            "canNonTrivialIceClip"
                          ],
                          "note": "Using a frozen Mella to clip through a one-tile-high wall."
                        }
                      ]
                    },
                    {
                      "name": "canPixelPerfectIceClip",
                      "requires": [
                        "canCeilingClip",
                        "canTrickyUseFrozenEnemies"
                      ],
                      "note": "Setting up an ice clip at exactly the right pixel, so the clip can work without the leniency allowed by an X-Ray standup"
                    },
                    {
                      "name": "canWallIceClip",
                      "requires": [
                        "canTrickyUseFrozenEnemies",
                        "Wave"
                      ],
                      "note": "Using spawner bugs to gradually clip through a wall by leaning on frozen enemies."
                    },
                    {
                      "name": "canCrabClimb",
                      "requires": [ "canTrickyUseFrozenEnemies" ],
                      "note": "Repeatedly freezing a crab to climb up a wall, using no other support. This does not include the simple act of using a frozen crab as a stepping stone, even on a wall or in midair."
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "canSafeSpotGT",
          "requires": [],
          "note": [
            "The ability to get into the safe spot in the Golden Torizo fight, where Samus can attack while being safe from GT's standard attacks."
          ]
        }
      ]
    },
    {
      "name": "Shots",
      "description": "Techs that revolve around shooting",
      "techs": [
        {
          "name": "canShotBlockOverload",
          "requires": [ "Wave" ],
          "note": [
            "Shooting a large number of off-screen shot blocks, overloading the memory and making it possible to clip through otherwise solid blocks.",
            "Made famous by its use in Frog Speedway."
          ],
          "devNote": "The tech itself doesn't require a specific beam besides Wave, but individual strats might."
        },
        {
          "name": "canHitbox",
          "requires": [],
          "note": [
            "The ability to pass through some enemies undamaged by shooting.",
            "May involve running through the enemy after making its hitbox inactive (e.g. Metal Pirates) or while the enemy has iframes (e.g. using Plasma)."
          ]
        },
        {
          "name": "canSuperReachAround",
          "requires": [
            "Super",
            {"ammo": {
              "type": "Super",
              "count": 1
            }}
          ],
          "note": "The ability to shoot a Super Missile at a precise location to hit an offscreen inanimate target, e.g. a Super block.",
          "devNote": [
            "It's recommended to apply a number of tries as leniency here.",
            "Although, the difficulty is very variable by strats so maybe it's preferrable to apply a leniency by individual strat rather than to the tech."
          ]
        },
        {
          "name": "canGateGlitch",
          "requires": [],
          "note": "The ability to open a left-facing blue or green gate from the right, using missiles or supers.",
          "devNote": [
            "A number of tries can't be applied as leniency on this tech, because the resource cost is not included in the tech (it varies with circumstances).",
            "There is a helper for all combinations of circumstances, and it's recommended to apply a number of tries as leniency on all such helpers that use this tech."
          ]
        },
        {
          "name": "canShootBeamLeftThroughWalls",
          "requires": [],
          "note": [
            "The ability to position Samus on a particular pixel distance horizontally from a 1 tile wall and fire a beam shot that passes through it.",
            "It is required to be in the angle up or angle down pose when firing the shot.  There is a 2 pixel window that works for each aim pose and they are not the same."
          ]
        },
        {
          "name": "canWrapAroundShot",
          "requires": [
            "Wave",
            "Charge"
          ],
          "note": "The ability to reach targets on the other side of a room by shooting Wave Beam at the right spot in the opposite wall."
        }
      ]
    },
    {
      "name": "Speed Booster",
      "description": "Techs related to Speed Booster use. Note that short charging is not a tech per se.",
      "techs": [
        {
          "name": "canShinespark",
          "requires": [ "SpeedBooster" ],
          "note": "The ability to use the Speed Booster to store a charge, then fly in a direction until an obstacle is hit."
        },
        {
          "name": "canUseSpeedEchoes",
          "requires": [ "canShinespark" ],
          "note": "Using as a weapon the Samus echoes that are emitted after a shinespark bonk."
        },
        {
          "name": "canBlueSpaceJump",
          "requires": [
            "SpeedBooster",
            "SpaceJump"
          ],
          "note": "Using SpaceJump to carry SpeedBooster's blue suit into some speed blocks that couldn't be reached just by running and jumping"
        },
        {
          "name": "canSpeedZebetitesSkip",
          "requires": [
            "SpeedBooster",
            {"enemyDamage": {
                "enemy": "Rinka",
                "type": "contact",
                "hits": 1
            }}
          ],
          "note": [
            "Being able to glitch through the Mother Brain zebetites by using a shinespark and iFrames.",
            "The tech itself isn't that difficult, what makes it difficult with the vanilla layout is getting the short charge."
          ]
        }
      ]
    },
    {
      "name": "Meta",
      "description": "A tech not referring to gameplay but to the handelling of the model itself.",
      "techs": [
        {
          "name": "canRiskPermanentLossOfAccess",
          "requires": [],
          "note": [
            "The acceptance that changes to game state can result in a strat becoming impossible.",
            "If that strat needed to be executed before the game state change, the game becomes incompletable.",
            "And that the \"mistake\" may not become visible until much later."
          ]
        }
      ]
    },
    {
      "name": "Miscellaneous",
      "description": "A catch-all for techs that don't fit in anywhere else",
      "techs": [
        {
          "name": "canCrystalFlash",
          "requires": [
            {"ammo": {
              "type": "Missile",
              "count": 10
            }},
            {"ammo": {
              "type": "Super",
              "count": 10
            }},
            {"ammo": {
              "type": "PowerBomb",
              "count": 11
            }},
            "Morph",
            "Missile",
            "Super",
            "PowerBomb"
          ],
          "note": "Performing a Crystal Flash.",
          "extensionTechs": [
            {
              "name": "canCrystalFlashForceStandup",
              "requires": ["canCrystalFlash"],
              "note": "Using a Crystal Flash to take advantage of the fact it forces Samus to stand up."
            }
          ]
        },
        {
          "name": "canMaridiaTubeClip",
          "requires": [],
          "note": "The ability to clip into the Maridia tube from above."
        },
        {
          "name": "canCeilingClip",
          "requires": [],
          "note": [
            "Basic variant of jumping into a two block high space and performing the actions needed to clip up through the ceiling.",
            "This often uses enemies, so is required for enemy clip enemies that are extensions of canUseEnemies."
          ]
        },
        {
          "name": "canTurnaroundAimCancel",
          "requires": [],
          "note": "Canceling an aim angle while crouching and turning around, to wiggle to the right"
        },
        {
          "name": "canMomentumConservingTurnaround",
          "requires": [],
          "note": [
            "Uses the uninteruptable frames of turning around in order to continue moving after hitting a solid object.",
            "Can be used to make it through an opening door, or barely just past a ledge."
          ]
        },
        {
          "name": "canFightEnemiesOffCamera",
          "requires": [],
          "note": "The ability to fight enemies that cannot be fully on screen.  And try to dodge their projectiles."
        },
        {
          "name": "canXRayStandUp",
          "requires": [
            "XRayScope"
          ],
          "note": "Force Samus to stand up, from a crouching position, by canceling use of the XRay Scope while turning around",
          "extensionTechs": [
            {
              "name": "canXRayClimb",
              "requires": [
                "canXRayStandUp"
              ],
              "note": [
                "All-purpose tech for X-Ray climbing by repeatedly using X-Ray's forced standup trick to climb up through walls.",
                "This tech is uncoupled from different setups that place Samus in a position to do this and only refers to the actual climbing portion."
              ],
              "extensionTechs": [
                {
                  "name": "canRightFacingDoorXRayClimb",
                  "requires": [
                    "canXRayClimb",
                    "canStationarySpinJump"
                  ],
                  "note": [
                    "Enter the partner door (which faces left in the adjacent room) with a stationary spinjump moving away to touch the transition with momentum that will get you stuck in the destination door.",
                    "That destination door is right-facing in the room where the X-Ray climb happens.",
                    "Then use the X-Ray's forced standup trick to climb up through in-bound walls."
                  ]
                },
                {
                  "name": "canLeftFacingDoorXRayClimb",
                  "requires": [
                    "canXRayClimb",
                    "canStationarySpinJump"
                  ],
                  "note": [
                    "Though using the same techs, the setup is a bit different for left-facing doors. ",
                    "It requires a dashing stationary spinjump into a doorcheck, then holding down as Samus arrives in the other room.",
                    "Then use normal X-Ray climbing."
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
