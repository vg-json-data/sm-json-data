{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "id": "https://raw.githubusercontent.com/vg-json-data/sm-json-data/master/schema/m3-region.schema.json",

  "definitions": {
    "strat": {
      "$id": "#/definitions/strat",
      "type": "object",
      "required": [
        "name",
        "notable",
        "requires"
      ],
      "additionalProperties": false,
      "allOf": [
        {
          "if": {
            "properties": {
              "notable": {"const": false}
            }
          },
          "then": {
            "not": {
              "required": ["reusableRoomwideNotable"]
            }
          },
          "else": {
            "required": ["note"]
          }
        }
      ],
      "properties": {
        "name": {
          "$id": "#/definitions/strat/properties/name",
          "type": "string",
          "title": "Strat Name",
          "description": "A name for the strat",
          "default": "Base",
          "examples": [
            "Base",
            "Brinstar Reserve Hole-in-one"
          ],
          "pattern": "^(.*)$"
        },
        "notable": {
          "$id": "#/definitions/strat/properties/notable",
          "type": "boolean"
        },
        "reusableRoomwideNotable": {
          "$id": "#/definitions/strat/properties/reusableRoomwideNotable",
          "type": "string",
          "description": "Reference to a roomwide reusable strat. Must match the name of a reusableRoomwideNotable in the room."
        },
        "requires": {
          "$ref" : "m3-requirements.schema.json#/definitions/logicalRequirements",
          "$id": "#/definitions/strat/properties/requires",
          "title": "Strat Requirements",
          "description": "Equipment, tech, and flag requirements to execute this strat."
        },
        "clearsObstacles": {
          "$id": "#/definitions/strat/properties/clearsObstacles",
          "type": "array",
          "title": "Clears Obstacles",
          "description": "The IDs of obstacles that are cleared (if not already cleared) by executing this strat.",
          "items": {
            "type": "string",
            "pattern": "^(.*)$"
          }
        },
        "failures": {
          "$id": "#/definitions/strat/properties/failures",
          "type": "array",
          "title": "Strat Failures",
          "description": "A list of ways the strat can be failed, with the consequences of that failure.",
          "items": {
            "$id": "#/definitions/strat/properties/failures/items",
            "type": "object",
            "required": [ "name" ],
            "not": {
              "required": ["leadsToNode", "softlock"]
            },
            "additionalProperties": false,
            "properties": {
              "name": {
                "$id": "#/definitions/strat/properties/failures/items/properties/name",
                "type": "string",
                "title": "Failure Name",
                "description": "A name that identifies this strat failure.",
                "default": "",
                "pattern": "^(.*)$"
              },
              "leadsToNode": {
                "$id": "#/definitions/strat/properties/failures/items/properties/leadsToNode",
                "type": "integer",
                "title": "Leads to Node",
                "description": "Indicates a node at which Samus ends up when this failure happens."
              },
              "cost": {
                "$ref" : "m3-requirements.schema.json#/definitions/logicalRequirements",
                "$id": "#/definitions/strat/properties/failures/items/properties/cost",
                "title": "Failure Cost",
                "description": "Cost of having this failure happen. This is represented as logical requirements, but only resource requirements make sense - not items or techs."
              },
              "softlock": {
                "$id": "#/definitions/strat/properties/failures/items/properties/softlock",
                "type": "boolean",
                "title": "Softlock",
                "description": "Indicates whether this failure causes a softlock. If missing, this should be viewed as false."
              },
              "note": {
                "$ref" : "m3-note.schema.json#/definitions/note",
                "$id": "#/definitions/strat/properties/failures/items/properties/note"
              },
              "devNote": {
                "$ref" : "m3-note.schema.json#/definitions/devNote",
                "$id": "#/definitions/strat/properties/failures/items/properties/devNote"
              }
            }
          }
        },
        "note": {
          "$ref" : "m3-note.schema.json#/definitions/note",
          "$id": "#/definitions/strat/properties/note"
        },
        "devNote": {
          "$ref" : "m3-note.schema.json#/definitions/devNote",
          "$id": "#/definitions/strat/properties/devNote"
        }
      }
    },
    "yields": {
      "$id": "#/definitions/yields",
      "type": "array",
      "title": "Yields",
      "items": {
        "$id": "#/definitions/yields/items",
        "type": "string"
      }
    },
    "physics": {
      "$id": "#/definitions/physics",
      "title": "Physics",
      "description": "Indicates a kind of SuperMetroid physics",
      "type": "string",
      "enum": [
        "air",
        "water",
        "lava",
        "acid",
        "normal"
      ],
      "pattern": "^(.*)$"
    }
  },
  "type": "object",
  "title": "Super Metroid Room Schema",
  "additionalProperties": false,
  "properties": {
    "$schema": {
      "type": "string",
      "title": "JSON Schema Path",
      "description": "A path to the definition of this file's JSON schema."
    },
    "rooms": {
      "type": "array",
      "items": {
        "$id": "#/properties/rooms/items",
        "type": "object",
        "title": "Room Object",
        "description": "An object that describes one room in Super Metroid",
        "required": [
          "id",
          "name",
          "area",
          "subarea",
          "playable",
          "nodes",
          "links"
        ],
        "additionalProperties": false,
        "allOf": [
          {
            "if": {
              "properties": {
                "playable": {"const": true}
              }
            },
            "then": {
              "required": ["roomEnvironments"],
              "properties": {
                "nodes": {
                  "items": {
                    "allOf": [
                      {
                        "if": {
                          "properties": {
                            "nodeType": {"const": "door"}
                          },
                          "not": {
                            "properties": {
                              "nodeSubType": {"const": "elevator"}
                            }
                          }
                        },
                        "then": {
                          "required": ["doorEnvironments"]
                        }
                      },
                      {
                        "if": {
                          "anyOf": [
                            {
                              "not": {
                                "properties": {
                                  "nodeType": {"const": "door"}
                                }
                              }
                            },
                            {
                              "properties": {
                                "nodeSubType": {"const": "elevator"}
                              }
                            }
                          ]
                        },
                        "then": {
                          "not":{
                            "required": ["doorEnvironments"]
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          {
            "if": {
              "properties": {
                "playable": {"const": false}
              }
            },
            "then": {
              "not": {
                "required": ["roomEnvironments"]
              },
              "properties": {
                "nodes": {
                  "items": {
                    "not": {
                      "required": ["doorEnvironments"]
                    }
                  }
                }
              }
            }
          }
        ],
        "properties": {
          "id": {
            "$id": "#/properties/rooms/items/properties/id",
            "type": "integer",
            "title": "Room ID",
            "description": "Identifier for this room, unique across the entire game",
            "default": 0,
            "examples": [
              7
            ]
          },
          "name": {
            "$id": "#/properties/rooms/items/properties/name",
            "type": "string",
            "title": "Room Name",
            "description": "As it appears in the SuperMetroid.run wiki",
            "default": "",
            "examples": [
              "Morphing Ball Room"
            ],
            "pattern": "^(.*)$"
          },
          "area": {
            "$id": "#/properties/rooms/items/properties/area",
            "type": "string",
            "title": "Area Name",
            "default": "",
            "examples": [
              "Brinstar"
            ],
            "pattern": "^(.*)$"
          },
          "subarea": {
            "$id": "#/properties/rooms/items/properties/subarea",
            "type": "string",
            "title": "Area Subname",
            "default": "",
            "examples": [
              "Blue"
            ],
            "pattern": "^(.*)$"
          },
          "subsubarea": {
            "$id": "#/properties/rooms/items/properties/subsubarea",
            "type": "string",
            "title": "Area SubSubname",
            "default": "",
            "examples": [
              "Yellow"
            ],
            "pattern": "^(.*)$"
          },
          "playable": {
            "$id": "#/properties/rooms/items/properties/playable",
            "type": "boolean",
            "title": "Playable",
            "description": "Indicates whether any gameplay happens in this room. When this is false, inputs do nothing and momentum is carried over from the previous room to the next one.",
            "default": true
          },
          "note": {
            "$ref" : "m3-note.schema.json#/definitions/note",
            "$id": "#/properties/rooms/items/properties/note"
          },
          "devNote": {
            "$ref" : "m3-note.schema.json#/definitions/devNote",
            "$id": "#/properties/rooms/items/properties/devNote"
          },
          "roomAddress": {
            "$id": "#/properties/rooms/items/properties/roomAddress",
            "type": "string",
            "title": "Room Address",
            "description": "Memory address of this room.",
            "examples": ["0x79E9F", "0x79F11"],
            "pattern": "^(.*)$"
          },
          "roomEnvironments": {
            "$id": "#/properties/rooms/items/properties/roomEnvironments",
            "type": "array",
            "title": "Room Environments",
            "description": "An array of objects that describe the room's environment in certain circumstances. In most cases there's only one that's relevant all the time.",
            "minItems": 1,
            "items": {
              "$id": "#/properties/rooms/items/properties/roomEnvironments/items",
              "type": "object",
              "title": "Room Environment",
              "description": "An object that describes the room-wide portion of the game environment, which can optionally depend on what node Samus entered from.",
              "required": [
                "heated"
              ],
              "additionalProperties": false,
              "properties": {
                "heated": {
                  "$id": "#/properties/rooms/items/properties/roomEnvironments/items/properties/heated",
                  "title": "Heated",
                  "description": "Indicates whether the room is heated",
                  "type": "boolean"
                },
                "entranceNodes": {
                  "$id": "#/properties/rooms/items/properties/roomEnvironments/items/properties/entranceNodes",
                  "title": "Entrance Nodes",
                  "description": "The nodes from which Samus must have entered the room for this environment to be applicable. Can be left null if applicable for all nodes.",
                  "type": "array",
                  "items": {
                    "$id": "#/properties/rooms/items/properties/roomEnvironments/items/properties/entranceNodes/items",
                    "type": "integer"
                  }
                },
                "note": {
                  "$ref" : "m3-note.schema.json#/definitions/note",
                  "$id": "#/properties/rooms/items/properties/roomEnvironments/items/properties/note"
                },
                "devNote": {
                  "$ref" : "m3-note.schema.json#/definitions/devNote",
                  "$id": "#/properties/rooms/items/properties/roomEnvironments/items/properties/devNote"
                }
              }
            }
          },
          "nodes": {
            "$id": "#/properties/rooms/items/properties/nodes",
            "type": "array",
            "title": "Nodes; Doors, Elevators, Item Locations, etc",
            "items": {
              "$id": "#/properties/rooms/items/properties/nodes/items",
              "type": "object",
              "title": "Node Object",
              "required": [
                "id",
                "name",
                "nodeType",
                "nodeSubType"
              ],
              "additionalProperties": false,
              "properties": {
                "id": {
                  "$id": "#/properties/rooms/items/properties/nodes/items/properties/id",
                  "type": "integer",
                  "title": "Node ID within Room",
                  "default": 0,
                  "examples": [
                    1
                  ]
                },
                "name": {
                  "$id": "#/properties/rooms/items/properties/nodes/items/properties/name",
                  "type": "string",
                  "title": "Node Name",
                  "description": "A name, unique across the entire game, that identifies this node",
                  "default": "",
                  "examples": [
                    "Landing Site Top Left Door (to Gauntlet)"
                  ],
                  "pattern": "^(.*)$"
                },
                "nodeType": {
                  "$id": "#/properties/rooms/items/properties/nodes/items/properties/nodeType",
                  "type": "string",
                  "title": "Node Type",
                  "description": "Examples: door, elevator, event, eye, gray, green, item, vertical",
                  "default": "",
                  "examples": [
                    "door",
                    "entrance",
                    "exit",
                    "event",
                    "item"
                  ],
                  "enum": [
                    "door",
                    "entrance",
                    "exit",
                    "event",
                    "item",
                    "junction",
                    "utility"
                  ],
                  "pattern": "^(.*)$"
                },
                "nodeSubType": {
                  "$id": "#/properties/rooms/items/properties/nodes/items/properties/nodeSubType",
                  "type": "string",
                  "title": "Node SubType",
                  "default": "",
                  "examples": [
                    "boss",
                    "chozo",
                    "hidden",
                    "visible"
                  ],
                  "enum": [
                    "boss",
                    "chozo",
                    "flag",
                    "hidden",
                    "visible",

                    "blue",
                    "closedWall",
                    "doorway",
                    "elevator",
                    "eye",
                    "gray",
                    "green",
                    "grey",
                    "inRoomTransition",
                    "one-way",
                    "passage",
                    "red",
                    "sandpit",
                    "vertical",
                    "yellow",

                    "junction",

                    "save",
                    "missile",
                    "energy",
                    "ship",
                    "map"
                  ],
                  "pattern": "^(.*)$"
                },
                "nodeItem": {
                  "$id": "#/properties/rooms/items/properties/nodes/items/properties/nodeItem",
                  "type": "string",
                  "title": "Vanilla Item",
                  "description": "Item that normally resides at this node in Vanilla"
                },
                "nodeAddress": {
                  "$id": "#/properties/rooms/items/properties/nodes/items/properties/nodeAddress",
                  "type": "string",
                  "title": "Memory Address",
                  "description": "Memory address of this location",
                  "examples": ["0x0019852", "0x001985e"]
                },
                "doorEnvironments": {
                  "$id": "#/properties/rooms/items/properties/nodes/items/properties/doorEnvironments",
                  "type": "array",
                  "title": "Door Environments",
                  "description": "An array of objects that describe the door's environment in certain circumstances. In most cases there's only one that's relevant all the time. This contains portions of the environment that are not room-wide.",
                  "minItems": 1,
                  "items": {
                    "$id": "#/properties/rooms/items/properties/nodes/items/properties/doorEnvironments/items",
                    "type": "object",
                    "title": "Door Environment",
                    "description": "An object that describes the portion of the game environment that can vary by door. This can optionally depend on what node Samus entered from.",
                    "required": [
                      "physics"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "physics": {
                        "$ref" : "#/definitions/physics",
                        "$id": "#/properties/rooms/items/properties/nodes/items/properties/doorEnvironments/items/properties/physics",
                        "description": "Indicates what kind of physics are active at this door"
                      },
                      "entranceNodes": {
                        "$id": "#/properties/rooms/items/properties/nodes/items/properties/doorEnvironments/items/properties/entranceNodes",
                        "title": "Entrance Nodes",
                        "description": "The nodes from which Samus must have entered the room for this environment to be applicable. Can be left null if applicable for all nodes.",
                        "type": "array",
                        "items": {
                          "$id": "#/properties/rooms/items/properties/nodes/items/properties/doorEnvironments/items/properties/entranceNodes/items",
                          "type": "integer"
                        }
                      },
                      "note": {
                        "$ref" : "m3-note.schema.json#/definitions/note",
                        "$id": "#/properties/rooms/items/properties/nodes/items/properties/doorEnvironments/items/properties/note"
                      },
                      "devNote": {
                        "$ref" : "m3-note.schema.json#/definitions/devNote",
                        "$id": "#/properties/rooms/items/properties/nodes/items/properties/doorEnvironments/items/properties/devNote"
                      }
                    }
                  }
                },
                "interactionRequires": {
                  "$ref" : "m3-requirements.schema.json#/definitions/logicalRequirements",
                  "$id": "#/properties/rooms/items/properties/nodes/items/properties/interactionRequires",
                  "title": "Interaction Requirements",
                  "description": "Equipment, tech, and flag requirements to interact with this node once it has been reached. This is separate from one-time unlock requirements."
                },
                "runways": {
                  "$id": "#/properties/rooms/items/properties/nodes/items/properties/runways",
                  "type": "array",
                  "title": "Runways",
                  "items": {
                    "$id": "#/properties/rooms/items/properties/nodes/items/properties/runways/items",
                    "type": "object",
                    "title": "Runway Object",
                    "additionalProperties": false,
                    "required": [
                      "name",
                      "length",
                      "openEnd",
                      "strats"
                    ],
                    "properties": {
                      "name": {
                        "$id": "#/properties/rooms/items/properties/nodes/items/properties/runways/items/properties/name",
                        "type": "string",
                        "title": "Runway Name",
                        "description": "A name, unique across the entire game, that identifies this runway",
                        "default": "",
                        "examples": [
                          "Base Runway - Landing Site Top Left Door (to Gauntlet)"
                        ],
                        "pattern": "^(.*)$"
                      },
                      "length": {
                        "$id": "#/properties/rooms/items/properties/nodes/items/properties/runways/items/properties/length",
                        "type": "integer",
                        "title": "Length",
                        "minimum": 0,
                        "maximum": 45,
                        "description": "Length of this Runway"
                      },
                      "gentleUpTiles": {
                        "$id": "#/properties/rooms/items/properties/nodes/items/properties/runways/items/properties/gentleUpTiles",
                        "type": "integer",
                        "title": "Gentle Up Tiles",
                        "description": "Number of tiles in the runway that gently slope (half a vertical tile) upwards (when running towards the door)"
                      },
                      "gentleDownTiles": {
                        "$id": "#/properties/rooms/items/properties/nodes/items/properties/runways/items/properties/gentleDownTiles",
                        "type": "integer",
                        "title": "Gentle Down Tiles",
                        "description": "Number of tiles in the runway that gently slope (half a vertical tile) downwards (when running towards the door)"
                      },
                      "steepUpTiles": {
                        "$id": "#/properties/rooms/items/properties/nodes/items/properties/runways/items/properties/steepUpTiles",
                        "type": "integer",
                        "title": "Steep Up Tiles",
                        "description": "Number of tiles in the runway that steeply slope (one vertical tile) upwards (when running towards the door)"
                      },
                      "steepDownTiles": {
                        "$id": "#/properties/rooms/items/properties/nodes/items/properties/runways/items/properties/steepDownTiles",
                        "type": "integer",
                        "title": "Steep Down Tiles",
                        "description": "Number of tiles in the runway that steeply slope (one vertical tile) downwards (when running towards the door)"
                      },
                      "startingDownTiles": {
                        "$id": "#/properties/rooms/items/properties/nodes/items/properties/runways/items/properties/startingDownTiles",
                        "type": "integer",
                        "title": "Starting Down Tiles",
                        "description": "Number of tiles at the start of the runway (away from the door) that slope down, preventing a stutter"
                      },
                      "endingUpTiles": {
                        "$id": "#/properties/rooms/items/properties/nodes/items/properties/runways/items/properties/endingUpTiles",
                        "type": "integer",
                        "title": "Ending Up Tiles",
                        "description": "Number of tiles at the end of the runway (at the door) that slope up, preventing a stutter when starting a run in the other direction"
                      },
                      "strats": {
                        "$id": "#/properties/rooms/items/properties/nodes/items/properties/runways/items/properties/strats",
                        "type": "array",
                        "title": "Runway Strats",
                        "description": "An array of strats that can be executed to use this runway.",
                        "items": {
                          "$ref" : "#/definitions/strat",
                          "$id": "#/properties/rooms/items/properties/nodes/items/properties/runways/items/properties/strats/items"
                        }
                      },
                      "usableComingIn": {
                        "$id": "#/properties/rooms/items/properties/nodes/items/properties/runways/items/properties/usableComingIn",
                        "type": "boolean",
                        "title": "Usable Coming In",
                        "description": "Indicates whether this runway is usable when coming in from the connected door.",
                        "default": true
                      },
                      "openEnd": {
                        "$id": "#/properties/rooms/items/properties/nodes/items/properties/runways/items/properties/openEnd",
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 1,
                        "title": "Number of Open Ends",
                        "description": "The number of open ends in the runway. An open end is a runway edge that ends in a dropoff rather than a wall. Each open end adds a bit of extra room.",
                        "default": 1
                      },
                      "note": {
                        "$ref" : "m3-note.schema.json#/definitions/note",
                        "$id": "#/properties/rooms/items/properties/nodes/items/properties/runways/items/properties/note"
                      },
                      "devNote": {
                        "$ref" : "m3-note.schema.json#/definitions/devNote",
                        "$id": "#/properties/rooms/items/properties/nodes/items/properties/runways/items/properties/devNote"
                      }
                    }
                  }
                },
                "jumpways": {
                  "$id": "#/properties/rooms/items/properties/nodes/items/properties/jumpways",
                  "type": "array",
                  "title": "Jumpways",
                  "items": {
                    "$id": "#/properties/rooms/items/properties/nodes/items/properties/jumpways/items",
                    "type": "object",
                    "title": "Jumpway Object",
                    "additionalProperties": false,
                    "required": [
                      "name",
                      "jumpwayType",
                      "height",
                      "requires"
                    ],
                    "properties": {
                      "name": {
                        "$id": "#/properties/rooms/items/properties/nodes/items/properties/jumpways/items/properties/name",
                        "type": "string",
                        "title": "Jumpway Name",
                        "description": "Name of this jumpway. It only needs to be unique within the node, not globally."
                      },
                      "jumpwayType": {
                        "$id": "#/properties/rooms/items/properties/nodes/items/properties/jumpways/items/properties/jumpwayType",
                        "type": "string",
                        "enum": [
                          "doorFrameBelow",
                          "platformBelow"
                        ],
                        "title": "Jumpway Type",
                        "description": "Type of jumpway: a door frame below a vertical transition, or a platform below a vertical transition."
                      },
                      "height": {
                        "$id": "#/properties/rooms/items/properties/nodes/items/properties/jumpways/items/properties/height",
                        "type": "number",
                        "title": "Height",
                        "description": "Height of the jumpway. For a door frame jumpway, this is the number of tiles beneath the door transition usable for wall-jumping. For a platform jumpway, it is the number of tiles between the door transition and the platform. A horizontal slope tile counts as a half tile."
                      },
                      "leftPosition": {
                        "$id": "#/properties/rooms/items/properties/nodes/items/properties/jumpways/items/properties/leftPosition",
                        "type": "number",
                        "title": "Left Position",
                        "description": "Position of the left end of the jumpway, measured as the number of tiles to the right of the center of the door. An open end should be represented as an extra half tile."
                      },
                      "rightPosition": {
                        "$id": "#/properties/rooms/items/properties/nodes/items/properties/jumpways/items/properties/rightPosition",
                        "type": "number",
                        "title": "Right Position",
                        "description": "Position of the right end of the jumpway, measured as the number of tiles to the right of the center of the door. An open end should be represented as an extra half tile."
                      },
                      "requires": {
                        "$id": "#/properties/rooms/items/properties/nodes/items/properties/jumpways/items/properties/requires",
                        "$ref": "m3-requirements.schema.json#/definitions/logicalRequirements",
                        "title": "Logical Requirements",
                        "description": "Logical requirements in order to use this jumpway."
                      },
                      "note": {
                        "$ref" : "m3-note.schema.json#/definitions/note",
                        "$id": "#/properties/rooms/items/properties/nodes/items/properties/jumpways/items/properties/note"
                      },
                      "devNote": {
                        "$ref" : "m3-note.schema.json#/definitions/devNote",
                        "$id": "#/properties/rooms/items/properties/nodes/items/properties/jumpways/items/properties/devNote"
                      }
                    }
                  }
                },
                "canLeaveCharged": {
                  "$id": "#/properties/rooms/items/properties/nodes/items/properties/canLeaveCharged",
                  "type": "array",
                  "title": "Can Leave Charged",
                  "description": "An array of ways Samus can leave through this door with a shinespark charge (or an active shinespark).",
                  "items": {
                    "$id": "#/properties/rooms/items/properties/nodes/items/properties/canLeaveCharged/items",
                    "type": "object",
                    "title": "canLeaveCharged Object",
                    "required": [
                      "framesRemaining",
                      "usedTiles",
                      "openEnd",
                      "strats"
                    ],
                    "dependencies": {
                      "initiateAt": { "required": ["mustOpenDoorFirst"] }
                    },
                    "additionalProperties": false,
                    "properties": {
                      "usedTiles": {
                        "$id": "#/properties/rooms/items/properties/nodes/items/properties/canLeaveCharged/properties/usedTiles",
                        "type": "integer",
                        "title": "Used Tiles",
                        "minimum": 1,
                        "maximum": 33,
                        "description": "The number of tiles that are available to charge a shinespark"
                      },
                      "framesRemaining": {
                        "$id": "#/properties/rooms/items/properties/nodes/items/properties/canLeaveCharged/properties/framesRemaining",
                        "type": "integer",
                        "title": "Frames Remaining",
                        "description": "The number of frames remaining in the shinespark charge when leaving the room. If this is 0, Samus leaves the room shinesparking."
                      },
                      "initiateRemotely": {
                        "$id": "#/properties/rooms/items/properties/nodes/items/properties/canLeaveCharged/properties/initiateRemotely",
                        "type": "object",
                        "title": "Initiate Remotely",
                        "description": "If the canLeaveCharged is initiated at a different node, explains how the door is reached and anything that must be done beforehand.",
                        "required": [
                          "initiateAt",
                          "mustOpenDoorFirst",
                          "pathToDoor"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "initiateAt": {
                            "$id": "#/properties/rooms/items/properties/nodes/items/properties/canLeaveCharged/properties/initiateRemotely/properties/initiateAt",
                            "type": "integer",
                            "title": "Initiate At",
                            "description": "The ID of the node at which this CanLeaveCharged is remotely initiated."
                          },
                          "mustOpenDoorFirst": {
                            "$id": "#/properties/rooms/items/properties/nodes/items/properties/canLeaveCharged/properties/initiateRemotely/properties/mustOpenDoorFirst",
                            "type": "boolean",
                            "title": "Must Open Door First",
                            "description": "Indicates whether the player must have opened the door first, which means no locks can be active when initiating, and the door must have been visited previously in the room (since last entering)."
                          },
                          "pathToDoor": {
                            "$id": "#/properties/rooms/items/properties/nodes/items/properties/canLeaveCharged/properties/initiateRemotely/properties/pathToDoor",
                            "type": "array",
                            "title": "Path to Door",
                            "description": "The navigation that the player must follow, from the 'initiateAt' node to the door, in order to leave charged. Each node in the path is an object. This must be followed in order, and should end at the door.",
                            "items": {
                              "$id": "#/properties/rooms/items/properties/nodes/items/properties/canLeaveCharged/properties/initiateRemotely/properties/pathToDoor/items",
                              "type": "object",
                              "title": "Path to Door Node",
                              "description": "A node in the execution path that takes a player from 'initiateAt' to the door. It's composed of a destination node and a strat to get there.",
                              "required": ["destinationNode", "strats"],
                              "additionalProperties": false,
                              "properties": {
                                "destinationNode": {
                                  "$id": "#/properties/rooms/items/properties/nodes/items/properties/canLeaveCharged/properties/initiateRemotely/properties/pathToDoor/items/properties/destinationNode",
                                  "type": "integer",
                                  "title": "Node",
                                  "description": "The ID of the node that must be visited"
                                },
                                "strats": {
                                  "$id": "#/properties/rooms/items/properties/nodes/items/properties/canLeaveCharged/properties/initiateRemotely/properties/pathToDoor/items/properties/strats",
                                  "type": "array",
                                  "title": "Strats",
                                  "description": "The strats that are acceptable to use to go to the destination node. These must be actual strats on an actual link that goes from the previously visited node to the destination.",
                                  "items": {
                                    "$id": "#/properties/rooms/items/properties/nodes/items/properties/canLeaveCharged/properties/initiateRemotely/properties/pathToDoor/items/properties/strats/items",
                                    "type": "string",
                                    "title": "Strat",
                                    "description": "A possible strat to use to go to the destination node. This must be the name of an actual strat on an actual link that goes from the previously visited node to the destination."
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "strats": {
                        "$id": "#/properties/rooms/items/properties/nodes/items/properties/canLeaveCharged/properties/strats",
                        "type": "array",
                        "title": "Leave Charged Strats",
                        "description": "An array of strats that can be executed to leave the room charged. All strats implicitly use their parent CanLeaveCharged's runway and shinespark data.",
                        "items": {
                          "$ref" : "#/definitions/strat",
                          "$id": "#/properties/rooms/items/properties/nodes/items/properties/canLeaveCharged/properties/strats/items"
                        }
                      },
                      "openEnd": {
                        "$id": "#/properties/rooms/items/properties/nodes/items/properties/canLeaveCharged/properties/openEnd",
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 2,
                        "title": "Number of Open Ends",
                        "description": "The number of open ends in the runway. An open end is a runway edge that ends in a dropoff rather than a wall. Each open end adds a bit of extra room."
                      },
                      "gentleUpTiles": {
                        "$id": "#/properties/rooms/items/properties/nodes/items/properties/canLeaveCharged/properties/gentleUpTiles",
                        "type": "integer",
                        "minimum": 0,
                        "title": "Gentle Up Tiles",
                        "description": "The number of tiles (among the used tiles) that slope gently upward (going up by half a tile)."
                      },
                      "gentleDownTiles": {
                        "$id": "#/properties/rooms/items/properties/nodes/items/properties/canLeaveCharged/properties/gentleDownTiles",
                        "type": "integer",
                        "minimum": 0,
                        "title": "Gentle Down Tiles",
                        "description": "The number of tiles (among the used tiles) that slope gently downward (going down by half a tile)."
                      },
                      "steepUpTiles": {
                        "$id": "#/properties/rooms/items/properties/nodes/items/properties/canLeaveCharged/properties/steepUpTiles",
                        "type": "integer",
                        "minimum": 0,
                        "title": "Steep Up Tiles",
                        "description": "The number of tiles (among the used tiles) that slope steeply upward (going up by a tile)."
                      },
                      "steepDownTiles": {
                        "$id": "#/properties/rooms/items/properties/nodes/items/properties/canLeaveCharged/properties/steepDownTiles",
                        "type": "integer",
                        "minimum": 0,
                        "title": "Steep Down Tiles",
                        "description": "The number of tiles (among the used tiles) that slope steeply downward (going down by a tile)."
                      },
                      "startingDownTiles": {
                        "$id": "#/properties/rooms/items/properties/nodes/items/properties/canLeaveCharged/properties/startingDownTiles",
                        "type": "integer",
                        "minimum": 0,
                        "title": "Starting Down Tiles",
                        "description": "The number of tiles (among the used tiles) that slope downwards at the start of a run, preventing the execution of a stutter."
                      },
                      "note": {
                        "$ref" : "m3-note.schema.json#/definitions/note",
                        "$id": "#/properties/rooms/items/properties/nodes/items/properties/canLeaveCharged/properties/note"
                      },
                      "devNote": {
                        "$ref" : "m3-note.schema.json#/definitions/devNote",
                        "$id": "#/properties/rooms/items/properties/nodes/items/properties/canLeaveCharged/properties/devNote"
                      }
                    }
                  }
                },
                "leaveWithGModeSetup": {
                  "$id": "#/properties/rooms/items/properties/nodes/items/properties/leaveWithGModeSetup",
                  "type": "array",
                  "title": "Leave With G-Mode Setup",
                  "description": "An array of ways Samus can leave through this door while taking damage through the transition, in a pose that would allow using X-Ray on the first frame after the transition. This is for setting up to enter R-mode or direct G-mode in the next room.",
                  "items": {
                    "$id": "#/properties/rooms/items/properties/nodes/items/properties/leaveWithGModeSetup/items",
                    "type": "object",
                    "title": "leaveWithGModeSetup Object",
                    "required": [
                      "strats"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "knockback": {
                        "$id": "#/properties/rooms/items/properties/nodes/items/properties/leaveWithGModeSetup/properties/knockback",
                        "type": "boolean",
                        "default": true,
                        "title": "Leaves With Knockback",
                        "description": "If true, then Samus gets knockback frames through the transition."
                      },
                      "strats": {
                        "$id": "#/properties/rooms/items/properties/nodes/items/properties/leaveWithGModeSetup/properties/strats",
                        "type": "array",
                        "title": "Leave With G-Mode Setup Strats",
                        "description": "An array of strats that can be executed to leave the room in a G-Mode setup. All strats implicitly use canUseEnemies tech since the only way to take damage through a transition is by an enemy.",
                        "items": {
                          "$ref" : "#/definitions/strat",
                          "$id": "#/properties/rooms/items/properties/nodes/items/properties/leaveWithGModeSetup/properties/strats/items"
                        }
                      },
                      "note": {
                        "$ref" : "m3-note.schema.json#/definitions/note",
                        "$id": "#/properties/rooms/items/properties/nodes/items/properties/leaveWithGModeSetup/properties/note"
                      },
                      "devNote": {
                        "$ref" : "m3-note.schema.json#/definitions/devNote",
                        "$id": "#/properties/rooms/items/properties/nodes/items/properties/leaveWithGModeSetup/properties/devNote"
                      }
                    }
                  }
                },
                "leaveWithGMode": {
                  "$id": "#/properties/rooms/items/properties/nodes/items/properties/leaveWithGMode",
                  "type": "array",
                  "title": "Leave With G-Mode",
                  "description": "An array of ways Samus can leave through this door while in G-mode, resulting in indirect G-mode in the next room.",
                  "items": {
                    "$id": "#/properties/rooms/items/properties/nodes/items/properties/leaveWithGMode/items",
                    "type": "object",
                    "title": "leaveWithGMode Object",
                    "required": [
                      "leavesWithArtificialMorph",
                      "strats"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "leavesWithArtificialMorph": {
                        "$id": "#/properties/rooms/items/properties/nodes/items/properties/leaveWithGMode/properties/leavesWithArtificialMorph",
                        "type": "boolean",
                        "title": "Leaves With Artificial Morph",
                        "description": "If true, then all of these strats will result in leaving the room while maintaining artificial morph."
                      },
                      "strats": {
                        "$id": "#/properties/rooms/items/properties/nodes/items/properties/leaveWithGMode/properties/strats",
                        "type": "array",
                        "title": "Leave With G-Mode Strats",
                        "description": "An array of strats that can be executed to leave this node while in G-mode.",
                        "items": {
                          "$ref" : "#/definitions/strat",
                          "$id": "#/properties/rooms/items/properties/nodes/items/properties/leaveWithGMode/properties/strats/items"
                        }
                      },
                      "note": {
                        "$ref" : "m3-note.schema.json#/definitions/note",
                        "$id": "#/properties/rooms/items/properties/nodes/items/properties/leaveWithGMode/properties/note"
                      },
                      "devNote": {
                        "$ref" : "m3-note.schema.json#/definitions/devNote",
                        "$id": "#/properties/rooms/items/properties/nodes/items/properties/leaveWithGMode/properties/devNote"
                      }
                  }
                  }
                },
                "gModeImmobile": {
                  "$id": "#/properties/rooms/items/properties/nodes/items/properties/gModeImmobile",
                  "type": "object",
                  "required": [ "requires" ],
                  "additionalProperties": false,
                  "properties": {
                    "requires": {
                      "$id": "#/properties/rooms/items/properties/nodes/items/properties/gModeImmobile/properties/requires",
                      "$ref": "m3-requirements.schema.json#/definitions/logicalRequirements",
                      "title": "G-Mode Immobile Requirements",
                      "description": "Logical requirements in order to allow control to be returned to Samus when coming into this door with G-mode immobile"
                    },
                    "note": {
                      "$ref" : "m3-note.schema.json#/definitions/note",
                      "$id": "#/properties/rooms/items/properties/nodes/items/properties/gModeImmobile/properties/note"
                    },
                    "devNote": {
                      "$ref" : "m3-note.schema.json#/definitions/devNote",
                      "$id": "#/properties/rooms/items/properties/nodes/items/properties/gModeImmobile/properties/devNote"
                    }
                  }
                },
                "spawnAt": {
                  "$id": "#/properties/rooms/items/properties/nodes/items/properties/spawnAt",
                  "type": "integer",
                  "title": "Node to spawn at",
                  "description": "ID of the node at which Samus spawns when entering a room through this node. If this is null, Samus just spawns at the node she entered through",
                  "default": null
                },
                "locks": {
                  "$id": "#/properties/rooms/items/properties/nodes/items/properties/locks",
                  "type": "array",
                  "title": "Node Locks",
                  "description": "An array of corresponding lock and unlock conditions for this node",
                  "default": null,
                  "items": {
                    "$id": "#/properties/rooms/items/properties/nodes/items/properties/locks/items",
                    "type": "object",
                    "title": "Lock Object",
                    "description": "Contains corresponding lock and unlock conditions for a node. If lock condition is missing, the lock is initially active.",
                    "required": [ "lockType", "unlockStrats", "name" ],
                    "additionalProperties": false,
                    "properties": {
                      "lockType": {
                        "$id": "#/properties/rooms/items/properties/nodes/items/properties/locks/items/properties/lockType",
                        "type": "string",
                        "title": "Lock Type",
                        "default": "",
                        "enum": [
                          "bossFight",
                          "coloredDoor",
                          "cutscene",
                          "escapeFunnel",
                          "gameFlag",
                          "killEnemies",
                          "permanent",
                          "triggeredEvent"
                        ],
                        "pattern": "^(.*)$"
                      },
                      "lock": {
                        "$ref" : "m3-requirements.schema.json#/definitions/logicalRequirements",
                        "$id": "#/properties/rooms/items/properties/nodes/items/properties/locks/items/properties/lock",
                        "title": "Lock Requirements",
                        "description": "Equipment, tech, and flag requirements for this node to be locked"
                      },
                      "name": {
                        "$id": "#/properties/rooms/items/properties/nodes/items/properties/locks/items/properties/name",
                        "title": "Lock Name",
                        "description": "A name to describe the lock. Should be unique across ALL locks."
                      },
                      "unlockStrats": {
                        "$id": "#/properties/rooms/items/properties/nodes/items/properties/locks/items/properties/unlockStrats",
                        "type": "array",
                        "title": "Unlock Strats",
                        "description": "An array of strats that can be used to unlock the lock.",
                        "items": {
                          "$ref" : "#/definitions/strat",
                          "$id": "#/properties/rooms/items/properties/nodes/items/properties/locks/items/properties/unlockStrats/items"
                        }
                      },
                      "bypassStrats": {
                        "$id": "#/properties/rooms/items/properties/nodes/items/properties/locks/items/properties/bypassStrats",
                        "type": "array",
                        "title": "Bypass Strats",
                        "description": "An array of strats that can be used to bypass the lock, going through it without unlocking it.",
                        "items": {
                          "$ref" : "#/definitions/strat",
                          "$id": "#/properties/rooms/items/properties/nodes/items/properties/locks/items/properties/bypassStrats/items"
                        }
                      },
                      "note": {
                        "$ref" : "m3-note.schema.json#/definitions/note",
                        "$id": "#/properties/rooms/items/properties/nodes/items/properties/locks/items/properties/note"
                      },
                      "devNote": {
                        "$ref" : "m3-note.schema.json#/definitions/devNote",
                        "$id": "#/properties/rooms/items/properties/nodes/items/properties/locks/items/properties/devNote"
                      },
                      "yields": {
                        "$ref" : "#/definitions/yields",
                        "$id": "#/properties/rooms/items/properties/nodes/items/properties/locks/items/properties/yields",
                        "description": "A list of flags that are activated by unlocking with this lock."
                      }
                    }
                  }
                },
                "twinDoorAddresses": {
                  "$id": "#/properties/rooms/items/properties/nodes/items/properties/twinDoorAddresses",
                  "type": [
                    "array",
                    "null"
                  ],
                  "title": "Twin Door Addresses",
                  "description": "The in-game address of other doors that should always lead to the same destination as this door",
                  "items": {
                    "$id": "#/properties/rooms/items/properties/nodes/items/properties/twinDoorAddresses/items",
                    "type": "object",
                    "title": "Twin Door Address",
                    "description": "The room and door address of a door that should always lead to the same destination as this door",
                    "required": ["roomAddress", "doorAddress"],
                    "additionalProperties": false,
                    "properties": {
                      "roomAddress": {
                        "$id": "#/properties/rooms/items/properties/nodes/items/properties/twinDoorAddresses/items/properties/roomAddress",
                        "type": "string",
                        "title": "Twin's Room Address",
                        "pattern": "^(.*)$"
                      },
                      "doorAddress": {
                        "$id": "#/properties/rooms/items/properties/nodes/items/properties/twinDoorAddresses/items/properties/doorAddress",
                        "type": "string",
                        "title": "Twin's Door Address",
                        "pattern": "^(.*)$"
                      }
                    }
                  }
                },
                "utility": {
                  "$id": "#/properties/rooms/items/properties/nodes/items/properties/utility",
                  "type": [
                    "array",
                    "null"
                  ],
                  "title": "Utilities",
                  "description": "Helping stations at this Node (such as save, refills, or map station)",
                  "items": {
                    "$id": "#/properties/rooms/items/properties/nodes/items/properties/utility/items",
                    "type": "string",
                    "enum": [
                      "save",
                      "missile",
                      "super",
                      "powerbomb",
                      "energy",
                      "reserve",
                      "map"
                    ]
                  }
                },
                "viewableNodes": {
                  "$id": "#/properties/rooms/items/properties/nodes/items/properties/viewableNodes",
                  "type": "array",
                  "title": "Viewable Item Nodes",
                  "description": "An array of objects describing what item nodes can be viewed from this node, and how.",
                  "items": {
                    "$id": "#/properties/rooms/items/properties/nodes/items/properties/viewableNodes/items",
                    "type": "object",
                    "title": "Viewable Node Object",
                    "description": "Describes what item nodes can be viewed from this node, and how.",
                    "required": [ "id", "strats" ],
                    "additionalProperties": false,
                    "properties": {
                      "id": {
                        "$id": "#/properties/rooms/items/properties/nodes/items/properties/viewableNodes/items/properties/id",
                        "type": "integer",
                        "title": "The ID of the item node that is viewable, within the room.",
                        "default": 0,
                        "examples": [
                          1
                        ]
                      },
                      "strats" : {
                        "$id": "#/properties/rooms/items/properties/nodes/items/properties/viewableNodes/items/properties/strats",
                        "type": "array",
                        "title": "Viewable Node Strats",
                        "description": "An array of strats that can be executed to view the item.",
                        "items": {
                          "$ref" : "#/definitions/strat",
                          "$id": "#/properties/rooms/items/properties/nodes/items/properties/viewableNodes/items/properties/strats/items"
                        }
                      }
                    }
                  }
                },
                "yields": {
                  "$ref" : "#/definitions/yields",
                  "$id": "#/properties/rooms/items/properties/nodes/items/properties/yields",
                  "description": "A list of flags that are activated by interacting with this node."
                },
                "note": {
                  "$ref" : "m3-note.schema.json#/definitions/note",
                  "$id": "#/properties/rooms/items/properties/nodes/items/properties/note"
                },
                "devNote": {
                  "$ref" : "m3-note.schema.json#/definitions/devNote",
                  "$id": "#/properties/rooms/items/properties/nodes/items/properties/devNote"
                }
              }
            }
          },
          "links": {
            "$id": "#/properties/rooms/items/properties/links",
            "type": "array",
            "title": "Links; pathways within the Room",
            "items": {
              "$id": "#/properties/rooms/items/properties/links/items",
              "type": "object",
              "title": "Link",
              "required": [
                "from",
                "to"
              ],
              "additionalProperties": false,
              "properties": {
                "from": {
                  "$id": "#/properties/rooms/items/properties/links/items/properties/from",
                  "type": "integer",
                  "title": "This Link originates at this Node ID within the Room",
                  "default": 0,
                  "examples": [
                    1
                  ]
                },
                "to": {
                  "$id": "#/properties/rooms/items/properties/links/items/properties/to",
                  "type": [
                    "array",
                    "null"
                  ],
                  "title": "This Link terminates at this Node ID within the Room",
                  "items": {
                    "$id": "#/properties/rooms/items/properties/links/items/properties/to/items",
                    "type": "object",
                    "title": "The Items Schema",
                    "required": [
                      "id",
                      "strats"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "id": {
                        "$id": "#/properties/rooms/items/properties/links/items/properties/to/items/properties/id",
                        "type": "integer",
                        "title": "Target Node ID within the Room",
                        "default": 0,
                        "examples": [
                          2
                        ]
                      },
                      "strats": {
                        "$id": "#/properties/rooms/items/properties/links/items/properties/to/items/properties/strats",
                        "type": "array",
                        "title": "Link Strats",
                        "description": "An array of strats that can be used to cross the link.",
                        "items": {
                          "$ref" : "#/definitions/strat",
                          "$id": "#/properties/rooms/items/properties/links/items/properties/to/items/properties/strats/items"
                        }
                      },
                      "note": {
                        "$ref" : "m3-note.schema.json#/definitions/note",
                        "$id": "#/properties/rooms/items/properties/links/items/properties/to/items/properties/note"
                      },
                      "devNote": {
                        "$ref" : "m3-note.schema.json#/definitions/devNote",
                        "$id": "#/properties/rooms/items/properties/links/items/properties/to/items/properties/devNote"
                      }
                    }
                  }
                }
              }
            }
          },
          "obstacles": {
            "$id": "#/properties/rooms/items/properties/obstacles",
            "type": "array",
            "title": "Obstacles; Things that block your way and can be destroyed, not respawning until the room is reset",
            "items": {
              "$id": "#/properties/rooms/items/properties/obstacles/items",
              "type": "object",
              "title": "Obstacle",
              "required": [
                "id",
                "name",
                "obstacleType"
              ],
              "additionalProperties": false,
              "properties": {
                "id": {
                  "$id": "#/properties/rooms/items/properties/obstacles/items/properties/id",
                  "type": "string",
                  "title": "Obstacle ID within Room. To reduce confusion with nodes, this should be a one-letter String",
                  "default": "",
                  "examples": ["A", "B"]
                },
                "name": {
                  "$id": "#/properties/rooms/items/properties/obstacles/items/properties/name",
                  "type": "string",
                  "title": "Obstacle Name",
                  "default": "",
                  "examples": [
                    "Top Crumble Blocks"
                  ],
                  "pattern": "^(.*)$"
                },
                "obstacleType": {
                  "$id": "#/properties/rooms/items/properties/obstacles/items/properties/obstacleType",
                  "type": "string",
                  "title": "Obstacle Type",
                  "description": "The main type of obstacle. Examples include 'inanimate', 'enemies', and 'abstract'",
                  "default": "",
                  "examples": [
                    "inanimate",
                    "enemies",
                    "abstract"
                  ],
                  "enum": [
                    "inanimate",
                    "enemies",
                    "abstract"
                  ],
                  "pattern": "^(.*)$"
                },
                "note": {
                  "$ref" : "m3-note.schema.json#/definitions/note",
                  "$id": "#/properties/rooms/items/properties/obstacles/items/properties/note"
                },
                "devNote": {
                  "$ref" : "m3-note.schema.json#/definitions/devNote",
                  "$id": "#/properties/rooms/items/properties/obstacles/items/properties/devNote"
                }
              }
            }
          },
          "enemies": {
            "$id": "#/properties/rooms/items/properties/enemies",
            "type": "array",
            "title": "Enemies; Things that try to kill you.",
            "items": {
              "$id": "#/properties/rooms/items/properties/enemies/items",
              "type": "object",
              "title": "Enemies",
              "allOf": [
                {
                  "required": [
                    "id",
                    "groupName",
                    "enemyName",
                    "quantity"
                  ]
                },
                {
                  "oneOf": [
                    { "required":
                      [ "homeNodes" ]
                    },
                    { "required":
                      [ "betweenNodes" ]
                    }
                  ]
                },
                {
                  "oneOf": [
                    {
                      "required": ["dropRequires"]
                    },
                    {
                      "required": ["farmCycles"]
                    },
                    {
                      "allOf": [
                        {
                          "not": {"required": ["dropRequires"]}
                        },
                        {
                          "not": {"required": ["farmCycles"]}
                        }
                      ]
                    }
                  ]
                }
              ],
              "additionalProperties": false,
              "properties": {
                "id": {
                  "$id": "#/properties/rooms/items/properties/enemies/items/properties/id",
                  "type": "string",
                  "title": "ID",
                  "description": "A short identifier, which can be used to reference this enemy group from within the room but which isn't unique across the whole game.",
                  "default": "",
                  "examples": ["e1"]
                },
                "groupName": {
                  "$id": "#/properties/rooms/items/properties/enemies/items/properties/groupName",
                  "type": "string",
                  "title": "Group name",
                  "description": "A name that identifies this enemy group uniquely across the entire game.",
                  "default": "",
                  "examples": ["Morph Ball Room Sidehoppers"]
                },
                "enemyName": {
                  "$id": "#/properties/rooms/items/properties/enemies/items/properties/enemyName",
                  "type": "string",
                  "title": "Enemy name",
                  "description": "The name of the enemy that this enemy group contains.",
                  "default": "",
                  "examples": [
                    "Kihunter (green)"
                  ]
                },
                "quantity": {
                  "$id": "#/properties/rooms/items/properties/enemies/items/properties/quantity",
                  "type": "integer",
                  "title": "Quantity",
                  "default": "",
                  "examples": [
                    3
                  ]
                },
                "homeNodes": {
                  "$id": "#/properties/rooms/items/properties/enemies/items/properties/homeNodes",
                  "type": "array",
                  "items": {
                    "type": "integer"
                  },
                  "title": "Home Nodes",
                  "description": "At what nodes enemies normaly engage you",
                  "default": [],
                  "examples": [
                    [1, 2]
                  ]
                },
                "betweenNodes": {
                  "$id": "#/properties/rooms/items/properties/enemies/items/properties/betweenNodes",
                  "type": "array",
                  "items": {
                    "type": "integer"
                  },
                  "title": "Enemies between nodes",
                  "description": "Enemies can only be reached while traveling between these two nodes",
                  "default": [],
                  "minItems": 2,
                  "maxItems": 2,
                  "examples": [
                    [1, 2]
                  ]
                },
                "spawn": {
                  "$ref" : "m3-requirements.schema.json#/definitions/logicalRequirements",
                  "$id": "#/properties/rooms/items/properties/enemies/items/properties/spawn",
                  "title": "Spawn Requirements",
                  "description": "Equipment, tech, and flag requirements for this enemy to spawn. If null, enemy can spawn from game start."
                },
                "stopSpawn": {
                  "$ref" : "m3-requirements.schema.json#/definitions/logicalRequirements",
                  "$id": "#/properties/rooms/items/properties/enemies/items/properties/stopSpawn",
                  "title": "Stop Spawning Requirements",
                  "description": "Equipment, tech, and flag requirements for this enemy to stop spawning. If null, enemy can always spawn once its spawn requirements have been met."
                },
                "dropRequires": {
                  "$ref" : "m3-requirements.schema.json#/definitions/logicalRequirements",
                  "$id": "#/properties/rooms/items/properties/enemies/items/properties/dropRequires",
                  "title": "Drop Requires",
                  "description": "Equipment, tech, and flag requirements that are needed to obtain the drop from this enemy without taking any damage. These go on top of what's needed to reach and kill the enemy."
                },
                "farmCycles": {
                  "$id": "#/properties/rooms/items/properties/enemies/items/properties/farmCycles",
                  "type": "array",
                  "title": "Farm Cycles",
                  "description": "Only for respawning enemy groups. A list of objects, each of which describes requirements to farm this group of enemies as well as duration of a farm cycle.",
                  "items": {
                    "$id": "#/properties/rooms/items/properties/enemies/items/properties/farmCycles/items",
                    "type": "object",
                    "required": [
                      "name",
                      "cycleFrames",
                      "requires"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "name": {
                        "$id": "#/properties/rooms/items/properties/enemies/items/properties/farmCycles/items/properties/name",
                        "type": "string",
                        "title": "Cycle Name",
                        "description": "A name to identify this farming cycle. Only needs to be unique within the enemy group, not globally, and comparable farming cycles executions on different enemy groups should share the same name."
                      },
                      "cycleFrames": {
                        "$id": "#/properties/rooms/items/properties/enemies/items/properties/farmCycles/items/properties/cycleFrames",
                        "type": "integer",
                        "title": "Cycle Frames",
                        "description": "The number of frames between two full sets of drop pickups for this farming cycle."
                      },
                      "requires": {
                        "$ref" : "m3-requirements.schema.json#/definitions/logicalRequirements",
                        "$id": "#/properties/rooms/items/properties/enemies/items/properties/farmCycles/items/properties/requires",
                        "title": "Farming Cycle Requirements",
                        "description": "Equipment, tech, and flag requirements to perform this type of farm."
                      },
                      "note": {
                        "$ref" : "m3-note.schema.json#/definitions/note",
                        "$id": "#/properties/rooms/items/properties/enemies/items/properties/farmCycles/items/properties/note"
                      },
                      "devNote": {
                        "$ref" : "m3-note.schema.json#/definitions/devNote",
                        "$id": "#/properties/rooms/items/properties/enemies/items/properties/farmCycles/items/properties/devNote"
                      }
                    }
                  }
                },
                "note": {
                  "$ref" : "m3-note.schema.json#/definitions/note",
                  "$id": "#/properties/rooms/items/properties/enemies/items/properties/note"
                },
                "devNote": {
                  "$ref" : "m3-note.schema.json#/definitions/devNote",
                  "$id": "#/properties/rooms/items/properties/enemies/items/properties/devNote"
                }
              }
            }
          },
          "reusableRoomwideNotable": {
            "$id": "#/properties/rooms/items/properties/reusableRoomwideNotable",
            "type": "array",
            "title": "Array of Reusable Notable Strats",
            "items": {
              "$id": "#/properties/rooms/items/properties/reusableRoomwideNotable/items",
              "type": "object",
              "title": "Reusable Roomwide Notable Strat",
              "required": [
                "name",
                "note"
              ],
              "additionalProperties": false,
              "properties": {
                "name": {
                  "$id": "#/properties/rooms/items/properties/reusableRoomwideNotable/items/properties/name",
                  "type": "string",
                  "title": "Shared Reusable Roomwide Strat Name",
                  "default": "",
                  "examples": [
                    "Bubble Mountain Damage Boost"
                  ],
                  "pattern": "^(.*)$"
                },
                "note": {
                  "$id": "#/properties/rooms/items/properties/reusableRoomwideNotable/items/properties/note",
                  "type": ["string", "array"],
                  "title": "Strat Description",
                  "description": "A common description for all strats that use this reusable strat",
                  "default": "",
                  "pattern": "^(.*)$"
                },
                "devNote": {
                  "$ref" : "m3-note.schema.json#/definitions/devNote",
                  "$id": "#/properties/rooms/items/properties/obstacles/items/properties/devNote"
                }
              }
            }
          }
        }
      }
    }
  }
}
